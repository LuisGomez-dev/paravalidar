local globals = require "medicamentos.globals"
local _AD = {}
local DB_HOST = globals.DB_HOST
local DB_PORT = globals.DB_PORT
local DB_NAME = globals.DB_NAME
local DB_USER = globals.DB_USER
local DB_PASS = globals.DB_PASS
local MAX_IDLE = globals.MAX_IDLE

local queries = {}

--Registro
queries["entregaConsumidorFinal"] = "INSERT INTO owmedicamentos.entrega_consumidor(clues,clave_medicamento,descripcion_medicamento,lote,fecha_entrega,cantidad,persona_entrega,persona_receta,persona_valida,id_envio_institucion ) VALUES (%s,%s,%s,%s,%s,%s,%s,%s,%s,%s) RETURNING id_entrega_consumidor; "
queries["ordenSuministro"] = "INSERT INTO owmedicamentos.orden_suministro(numero_orden_suministro, id_institucion_requirente, id_contrato, fecha_expedicion_orden, fecha_entrega_orden, id_proveedor,usuario_carga, id_medicamento, cantidad_solicitada, id_almacen_entrega, id_clues, clues_origen_id) SELECT %s,%s,%s,%s,%s,%s,%s,(select id from ca_medicamentos where clave = %s),%s,%s,%s,%s WHERE NOT EXISTS (Select 1 from orden_suministro where numero_orden_suministro = %s and estatus NOT IN (1,9) and id_institucion_requirente = %s) RETURNING id_orden_suministro; UPDATE owmedicamentos.rel_contrato_medicamentos set cantidad_disponible = coalesce(coalesce (cantidad_disponible - %s, null),  cantidad_disponible) where id_contrato =%s and id_medicamento =(select id from ca_medicamentos where clave = %s);"
--queries["ordenSuministro"] = "INSERT INTO owmedicamentos.orden_suministro_test(numero_orden_suministro, id_institucion_requirente, id_contrato, fecha_expedicion_orden, fecha_entrega_orden, id_proveedor, id_medicamento, cantidad_solicitada, id_almacen_entrega, id_clues) SELECT %s,%s,%s,%s,%s,%s,(select id from ca_medicamentos where clave = %s),%s,%s,%s WHERE NOT EXISTS (Select 1 from orden_suministro_test where numero_orden_suministro = %s and estatus NOT IN (1,9) and id_institucion_requirente = %s) RETURNING id_orden_suministro; "
queries["ordenSuministroLayout"] = "INSERT INTO owmedicamentos.orden_suministro(numero_orden_suministro, id_institucion_requirente, id_contrato, fecha_expedicion_orden, fecha_entrega_orden, id_proveedor, id_medicamento, cantidad_solicitada, id_almacen_entrega, usuario_carga, id_clues, clues_origen_id) SELECT %s,%s,(select distinct cc.id from ca_contratos cc join rel_contrato_medicamentos rcm on cc.id = rcm.id_contrato join  ca_medicamentos med on med.id = rcm.id_medicamento where contrato = %s and fecha_fin > current_timestamp and cc.estatus = true  and id_dependencia = %s ), coalesce((Select fecha_expedicion_orden from orden_suministro where numero_orden_suministro = %s and id_institucion_requirente = %s Limit 1) , coalesce(%s,current_date)), coalesce((Select fecha_entrega_orden from orden_suministro where numero_orden_suministro = %s and id_institucion_requirente = %s Limit 1) , coalesce(%s,CURRENT_DATE + INTERVAL '14 day')), (select ca_proveedores.id from ca_proveedores join ca_contratos cc on ca_proveedores.id = cc.id_proveedor where ca_proveedores.rfc = %s and ca_proveedores.estatus = true and cc.id_dependencia = %s and cc.contrato = %s ),(select ca_medicamentos.id from ca_medicamentos join rel_contrato_medicamentos rcm on ca_medicamentos.id=rcm.id_medicamento join ca_contratos cc on cc.id = rcm.id_contrato where clave = %s and ca_medicamentos.estatus = true and cc.contrato = %s and cc.id_dependencia = %s ),(select cantidad_disponible +%s -cantidad_disponible as cantsolicitada from rel_contrato_medicamentos join ca_contratos cc on cc.id = rel_contrato_medicamentos.id_contrato join ca_medicamentos cm on cm.id = rel_contrato_medicamentos.id_medicamento where cc.contrato= %s and cm.clave = %s and %s <= cantidad_disponible),(Select id from ca_almacenes where codigo = %s and estatus = true),(select nombre_solicitante from tx_procesos tp  where id = %s),(Select id from ca_clues where upper(clave) =upper(%s)  and id_dependencia = %s and estatus = true), (Select id from ca_clues where upper(clave) =upper(%s)  and id_dependencia = %s and estatus = true) WHERE NOT EXISTS (Select 1 from orden_suministro where numero_orden_suministro = %s and id_institucion_requirente = %s) RETURNING id_orden_suministro; UPDATE owmedicamentos.rel_contrato_medicamentos set cantidad_disponible = coalesce(coalesce (cantidad_disponible - %s, null),  cantidad_disponible) where id_contrato =(Select id from ca_contratos where contrato = %s ) and id_medicamento =(select id from ca_medicamentos where clave = %s) ; select id_dependencia , fecha_fin , estatus from ca_contratos where contrato = %s ; "
--queries["ordenSuministroLayout"] = "INSERT INTO owmedicamentos.orden_suministro(numero_orden_suministro, id_institucion_requirente, id_contrato, fecha_expedicion_orden, fecha_entrega_orden, id_proveedor, id_medicamento, cantidad_solicitada, id_almacen_entrega, usuario_carga, id_clues,clues_origen_id) SELECT %s,%s,(select distinct cc.id from ca_contratos cc join rel_contrato_medicamentos rcm on cc.id = rcm.id_contrato join  ca_medicamentos med on med.id = rcm.id_medicamento where contrato = %s and fecha_fin > current_timestamp and cc.estatus = true  and id_dependencia = %s ), coalesce((Select fecha_expedicion_orden from orden_suministro where numero_orden_suministro = %s and id_institucion_requirente = %s Limit 1) , coalesce(%s,current_date)), coalesce((Select fecha_entrega_orden from orden_suministro where numero_orden_suministro = %s and id_institucion_requirente = %s Limit 1) , coalesce(%s,CURRENT_DATE + INTERVAL '14 day')), (select ca_proveedores.id from ca_proveedores join ca_contratos cc on ca_proveedores.id = cc.id_proveedor where ca_proveedores.rfc = %s and ca_proveedores.estatus = true and cc.id_dependencia = %s and cc.contrato = %s ),(select ca_medicamentos.id from ca_medicamentos join rel_contrato_medicamentos rcm on ca_medicamentos.id=rcm.id_medicamento join ca_contratos cc on cc.id = rcm.id_contrato where clave = %s and ca_medicamentos.estatus = true and cc.contrato = %s and cc.id_dependencia = %s ),(select cantidad_disponible +%s -cantidad_disponible as cantsolicitada from rel_contrato_medicamentos join ca_contratos cc on cc.id = rel_contrato_medicamentos.id_contrato join ca_medicamentos cm on cm.id = rel_contrato_medicamentos.id_medicamento where cc.contrato= %s and cm.clave = %s and %s <= cantidad_disponible),(Select id from ca_almacenes where codigo = %s and estatus = true),(select nombre_solicitante from tx_procesos tp  where id = %s),(Select id from ca_clues where upper(clave) =upper(%s)  and id_dependencia = %s and estatus = true),(Select id from ca_clues where upper(clave) =upper(%s)  and id_dependencia = %s and estatus = true) WHERE NOT EXISTS (Select 1 from orden_suministro where numero_orden_suministro = %s and estatus NOT IN (1,9) and id_institucion_requirente = %s) RETURNING id_orden_suministro; UPDATE owmedicamentos.rel_contrato_medicamentos set cantidad_disponible = coalesce(coalesce (cantidad_disponible - %s, null),  cantidad_disponible) where id_contrato =(Select id from ca_contratos where contrato = %s ) and id_medicamento =(select id from ca_medicamentos where clave = %s) ; select id_dependencia , fecha_fin , estatus from ca_contratos where contrato = %s ; "
queries["crearEventoAlmacenTransitorio"] = "INSERT INTO owmedicamentos.rel_almacenes_eventos(id_almacen, descripcion, link_detalle_orden, fecha_ini, fecha_fin) VALUES (%s,%s,%s,%s, (%s)::timestamp + ((select duracion_horas from ca_almacenes_configs where id_almacen = %s) || ' hours')::interval) RETURNING id; "
queries["actualizarOrdenesSuministro"] = "UPDATE owmedicamentos.orden_suministro set estatus = %s, usuario_autorizacion = %s, fecha_autorizacion = current_timestamp ,fecha_expedicion_orden = case when estatus = 1 then CURRENT_DATE else fecha_expedicion_orden end, fecha_entrega_orden = case when estatus = 1 then CURRENT_DATE + INTERVAL '14 day' else fecha_entrega_orden end where id_orden_suministro = ANY(%s); UPDATE owmedicamentos.orden_suministro set estatus = 9, usuario_cancelacion = %s, fecha_cancelacion = current_timestamp where estatus = 1 and %s is true and numero_orden_suministro IN (Select distinct numero_orden_suministro from orden_suministro where id_orden_suministro = ANY(%s)) and id_institucion_requirente = %s; "
queries["cancelarOrdenesSuministro"] = "UPDATE owmedicamentos.orden_suministro set estatus = 9, usuario_cancelacion = %s, fecha_cancelacion = current_timestamp where id_orden_suministro = ANY(%s) and estatus <> 9;"
queries["actualizarRelContrato"] = "update rel_contrato_medicamentos set cantidad_disponible = cantidad_disponible + %s where id in ( select rcm.id from ca_contratos cc join rel_contrato_medicamentos rcm on rcm.id_contrato = cc.id join ca_medicamentos cm on cm.id = rcm.id_medicamento join ca_dependencias cd on cd.id = cc.id_dependencia join orden_suministro os on os.id_contrato = cc.id and os.id_medicamento = cm.id where os.id_orden_suministro = %s);"
queries["cancelarOrdenesSuministrows"] = "UPDATE owmedicamentos.orden_suministro set estatus = 9, usuario_cancelacion = %s, fecha_cancelacion = current_timestamp, causas_cancelacion = %s, origencancelacion=1 where id_orden_suministro = ANY(%s) and estatus <> 9 RETURNING fecha_cancelacion;"
queries["validacionOrdenesSuministrows"] = "select id_orden_suministro ,estatus ,id_institucion_requirente, (SELECT MAX(id) as motivo FROM ca_motivos_cancelacion )  from orden_suministro os  where id_orden_suministro = ANY(%s) ;"
queries["actualizarTarimas"] = "Update owmedicamentos.orden_remision set tarimas_totales = %s where id_orden_suministro = ANY(%s) and fecha_hora_entrega = %s and estatus = 1; "
queries["ordenRemision"] ="INSERT INTO owmedicamentos.orden_remision(numero_orden_remision, id_orden_suministro, lote, fecha_caducidad, fecha_fabricacion, peso_envase_colectivo, dimensiones_envase_colectivo_alto, dimensiones_envase_colectivo_ancho, dimensiones_envase_colectivo_profundidad, piezas_envase_colectivo, codigo_barras, marca_medicamento, procedencia, cantidad_entregar, tarimas_totales, fecha_hora_entrega, cantidad_recibida, numero_envio, estatus, codigo_barras_colectivo, codigo_barras_general) VALUES (%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,0,%s,%s,%s,%s) RETURNING id_orden_remision; "
queries["ordenRemisionCancelarDetalle"] = "INSERT INTO owmedicamentos.orden_remision(numero_orden_remision, id_orden_suministro, lote, fecha_caducidad, fecha_fabricacion, peso_envase_colectivo, dimensiones_envase_colectivo_alto, dimensiones_envase_colectivo_ancho, dimensiones_envase_colectivo_profundidad, piezas_envase_colectivo, codigo_barras, marca_medicamento, procedencia, cantidad_entregar, tarimas_totales, fecha_hora_entrega, cantidad_recibida, numero_envio, estatus, codigo_barras_colectivo, codigo_barras_general,usuario_cancelacion,inicio_recepcion_usu_qr,fecha_cancelacion) VALUES (%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,0,%s,%s,%s,%s,%s,%s,(select CURRENT_TIMESTAMP)) RETURNING id_orden_remision; "
queries["actualizarOrdenesRemision"] ="UPDATE owmedicamentos.orden_remision set  estatus = coalesce(%s,estatus), usuario_registro_recepcion = %s, cantidad_recibida = %s, causas_rechazos = %s, fecha_hora_recepcion = coalesce(%s,fecha_hora_recepcion), notas = coalesce(%s, notas), fecha_hora_registro_recepcion = case when fecha_hora_registro_recepcion is null then current_timestamp else fecha_hora_registro_recepcion end, id_almacen_recibe = %s, id_usr_qr=%s, inicio_recepcion_usu_qr=%s   where id_orden_remision = %s; "
queries["actualizarOrdenesRemisionRechazo"] = "UPDATE owmedicamentos.orden_remision set  estatus = coalesce(%s,estatus), usuario_registro_recepcion = %s, cantidad_recibida = %s, causas_rechazos = %s, fecha_hora_recepcion = coalesce(%s,fecha_hora_recepcion), notas = coalesce(%s, notas), fecha_hora_registro_recepcion = case when fecha_hora_registro_recepcion is null then current_timestamp else fecha_hora_registro_recepcion end, id_almacen_recibe = %s, id_usr_qr=%s,inicio_recepcion_usu_qr=%s,   estatus_operador_log=2   where id_orden_remision = %s; "
queries["actualizarOrdenesRemisionOld"] = "UPDATE owmedicamentos.orden_remision set estatus = coalesce(%s,estatus), usuario_registro_recepcion = %s, cantidad_recibida = %s, causas_rechazos = %s, fecha_hora_recepcion = coalesce(%s,fecha_hora_recepcion), notas = %s, fecha_hora_registro_recepcion = case when fecha_hora_registro_recepcion is null then current_timestamp else fecha_hora_registro_recepcion end, id_almacen_recibe = %s where id_orden_remision = %s; "
queries["actualizarOrdenesSuministroCantidad"] = "UPDATE owmedicamentos.orden_suministro set fecha_entrega_orden = coalesce(%s,fecha_entrega_orden), cantidad_solicitada = coalesce(%s,cantidad_solicitada) where id_orden_suministro = %s and estatus = 1; "
queries["ordenEntrega"] = "with alm as (Select id_almacen_entrega as id from orden_suministro inner join orden_remision on orden_remision.id_orden_suministro = orden_suministro.id_orden_suministro and id_orden_remision = %s Inner join rel_usuarios_camunda ON rel_usuarios_camunda.id = orden_suministro.id_almacen_entrega and rel_usuarios_camunda.tipo = 'almacenes' and rel_usuarios_camunda.usuario = ANY(%s)), insOE as (INSERT INTO orden_entrega (orden_entrega, id_almacen, fecha_hora_salida, nombre_transportista) SELECT %s, id, %s, %s from alm where not exists (select 1 from orden_entrega,alm where orden_entrega = %s and id_almacen = alm.id) returning id_orden_entrega), selOE as (Select id_orden_entrega from insOE UNION select id_orden_entrega from orden_entrega,alm where orden_entrega = %s and id_almacen = alm.id ) INSERT INTO rel_remision_entrega (id_orden_remision, id_orden_entrega, cantidad_salida) select %s, id_orden_entrega, %s from selOE returning id;"
queries["recepcionDestino"] = "Update rel_remision_entrega set fecha_hora_entrega_destino = %s, nombre_destinatario = %s, cantidad_recibida_destino = %s, causas_rechazo = %s where id = %s and cantidad_recibida_destino is null;"
queries["crearRelacionUsuario"] = "INSERT INTO owmedicamentos.rel_usuarios_camunda(id, usuario, tipo, estatus) SELECT %s,%s,%s,true WHERE NOT EXISTS (Select 1 from owmedicamentos.rel_usuarios_camunda where id = %s and usuario = %s and tipo = %s) RETURNING id; "
queries["registrarEncuestaCovid19"] = "INSERT INTO encuesta_covid19(edad,id_sexo,telefono,latitud,longitud,puntuacion,id_tipo_encuesta,respuesta,fecha_hora_registro,fcm_token) values (%s,%s,%s,%s,%s,%s,%s,%s,current_timestamp,%s) RETURNING id; "
queries["registrarSeguimientoEncuesta"] = "INSERT INTO seguimiento_encuesta(latitud,longitud,id_encuesta,ruta_respuesta,id_sesion,id_riesgo,fecha_hora_registro) Select %s,%s,%s,%s,%s,%s,current_timestamp where not exists (select 1 from seguimiento_encuesta where id_encuesta = %s) RETURNING id; "
queries["consultarSesion"] = "update sesiones_app set intentos = intentos + 1, fecha_ultimo_acceso = current_timestamp, version_ultimo_acceso = %s, ultima_ubicacion_lat = %s, ultima_ubicacion_lon = %s where estatus = true and fcm_token = %s; select id, fcm_token, fecha_creacion, intentos, fecha_ultimo_acceso, estatus,version_ultimo_acceso, plataforma from sesiones_app where fcm_token = %s;"
queries["crearSesion"] = "Insert into sesiones_app(fcm_token,fecha_creacion,estatus,intentos,telefono,plataforma,version_creacion) select %s, current_timestamp,true,1,%s,%s,%s where not exists (select 1 from sesiones_app where fcm_token = %s) RETURNING id;"
queries["updateOSOld"] = "select count(*) from orden_suministro os join ca_contratos ct on os.id_contrato = ct.id join ca_proveedores cp on os.id_proveedor = cp.id join ca_medicamentos cm on os.id_medicamento = cm.id join ca_almacenes ca on  os.id_almacen_entrega = ca.id join ca_clues cc on os.id_clues = cc.id where os.numero_orden_suministro = %s and ct.contrato = %s and cp.rfc = %s and (cm.clave = %s or cm.clave_10posiciones = %s or cm.clave_14posiciones = %s) and os.cantidad_solicitada = %s and ca.codigo = %s and cc.clave = %s and os.estatus = 1;       update orden_suministro set estatus = %s, fecha_cancelacion = case when %s = 9 then current_timestamp else NULL end where id_orden_suministro in (select os.id_orden_suministro from orden_suministro os join ca_contratos ct on os.id_contrato = ct.id join ca_proveedores cp on os.id_proveedor = cp.id join ca_medicamentos cm  on os.id_medicamento = cm.id join ca_almacenes ca on  os.id_almacen_entrega = ca.id join ca_clues cc on os.id_clues = cc.id where os.numero_orden_suministro = %s and ct.contrato = %s and cp.rfc = %s and (cm.clave = %s or cm.clave_10posiciones = %s or cm.clave_14posiciones = %s) and os.cantidad_solicitada = %s and ca.codigo = %s and cc.clave = %s and os.estatus = 1); "
queries["updateOSold2"] = "update orden_suministro set estatus = %s, fecha_cancelacion = case when %s = 9 then current_timestamp else NULL end where id_orden_suministro in (select os.id_orden_suministro from orden_suministro os join ca_contratos ct on os.id_contrato = ct.id join ca_proveedores cp on os.id_proveedor = cp.id join ca_medicamentos cm  on os.id_medicamento = cm.id join ca_almacenes ca on  os.id_almacen_entrega = ca.id join ca_clues cc on os.id_clues = cc.id where os.numero_orden_suministro = %s and ct.contrato = %s and cp.rfc = %s and (cm.clave = %s or cm.clave_10posiciones = %s or cm.clave_14posiciones = %s) and os.cantidad_solicitada = %s and ca.codigo = %s and cc.clave = %s and os.estatus = 1); "
queries["updateOS"] = "update orden_suministro set estatus = %s, %s, %s where id_orden_suministro in (select os.id_orden_suministro from orden_suministro os join ca_contratos ct on os.id_contrato = ct.id join ca_proveedores cp on os.id_proveedor = cp.id join ca_medicamentos cm on os.id_medicamento = cm.id join ca_almacenes ca on os.id_almacen_entrega = ca.id join ca_clues cc on os.id_clues = cc.id join ca_dependencias dep on dep.id =os.id_institucion_requirente join ca_accesos cac on cac.id_dependencia = dep.id join rel_accesos_modulos ram on ram.id_usuario = cac.id where os.numero_orden_suministro = %s and ct.contrato = %s and cp.rfc = %s and (cm.clave = %s or cm.clave_10posiciones = %s or cm.clave_14posiciones = %s) and os.cantidad_solicitada = %s and ca.codigo = %s and cc.clave = %s and os.estatus = 1 and cac.usuario = %s and ram.id_modulo_sistema = 101 and cac.id_rol = 3 and cp.estatus = true and cm.estatus = true and ca.estatus = true and cc.estatus = true and dep.estatus = true and cac.estatus = true); "

queries["updateOSdosOld"] = "update orden_suministro set estatus = %s, fecha_autorizacion = case when %s = 2 then current_timestamp else null end, usuario_autorizacion = case when %s = 2 then %s else null end, fecha_cancelacion = case when %s = 9 then current_timestamp else null end, usuario_cancelacion = case when %s = 9 then %s else null end where id_orden_suministro in ( select os.id_orden_suministro from orden_suministro os join ca_contratos ct on os.id_contrato = ct.id join ca_proveedores cp on os.id_proveedor = cp.id join ca_medicamentos cm on os.id_medicamento = cm.id join ca_almacenes ca on os.id_almacen_entrega = ca.id join ca_clues cc on os.id_clues = cc.id join ca_dependencias dep on dep.id = os.id_institucion_requirente join ca_accesos cac on cac.id_dependencia = dep.id where os.numero_orden_suministro = %s and ct.contrato = %s and cp.rfc = %s and (cm.clave = %s or cm.clave_10posiciones = %s) and os.cantidad_solicitada = %s and ca.codigo = %s and cc.clave = %s and os.estatus = 1 and cac.usuario = %s and cp.estatus = true and cm.estatus = true and ca.estatus = true and cc.estatus = true and dep.estatus = true and cac.estatus = true); "

queries["updateOSAutorizadas"] = "update owmedicamentos.orden_suministro set estatus = 2, fecha_autorizacion = current_timestamp, usuario_autorizacion = %s, origen_auth = 1 where id_orden_suministro = ANY(%s); "

queries["updateOSCanceladasOld"] = "update owmedicamentos.orden_suministro set estatus = 9, fecha_cancelacion = current_timestamp, usuario_cancelacion = %s where id_orden_suministro in ( select os.id_orden_suministro from owmedicamentos.orden_suministro os where os.numero_orden_suministro = %s and os.estatus = 1 and %s = 'cancelada');"

queries["updateOSCanceladas"] = "update owmedicamentos.orden_suministro set estatus = 9, fecha_cancelacion = current_timestamp, usuario_cancelacion = %s where id_orden_suministro = ANY(%s);"

queries["updateOSCanceladasCantMedOld"] = "update rel_contrato_medicamentos set cantidad_disponible = cantidad_disponible + %s where id in ( select rcm.id from ca_contratos cc join rel_contrato_medicamentos rcm on rcm.id_contrato = cc.id join ca_medicamentos cm on cm.id = rcm.id_medicamento join ca_dependencias cd on cd.id = cc.id_dependencia join orden_suministro os on os.id_contrato = cc.id and os.id_medicamento = cm.id where os.id_orden_suministro = %s and cc.fecha_ini <= current_date and cc.fecha_fin >= current_date and cc.estatus = true);"

queries["updateOSCanceladasCantMed"] = "update rel_contrato_medicamentos set cantidad_disponible = cantidad_disponible + %s where id in ( select rcm.id from ca_contratos cc join rel_contrato_medicamentos rcm on rcm.id_contrato = cc.id join ca_medicamentos cm on cm.id = rcm.id_medicamento join ca_dependencias cd on cd.id = cc.id_dependencia join orden_suministro os on os.id_contrato = cc.id and os.id_medicamento = cm.id where os.id_orden_suministro = %s);"
queries["guardarDocumento"] = "INSERT INTO documentos_sndm(id, nombre_archivo, tipo, numero_envio, mimetype_archivo, tamanio_archivo, sistema, i_user) VALUES (%s,%s,%s,%s,%s,%s,%s,%s) RETURNING id;"
queries["eliminarDocumento"] = "update documentos_sndm set a_user = %s, fecha_elimina = now(), is_deleted = true where id = %s;"

--Consultas
queries["countOSold"] = "select count(*) from orden_suministro os join ca_contratos ct on os.id_contrato = ct.id join ca_proveedores cp on os.id_proveedor = cp.id join ca_medicamentos cm on os.id_medicamento = cm.id join ca_almacenes ca on  os.id_almacen_entrega = ca.id join ca_clues cc on os.id_clues = cc.id where os.numero_orden_suministro = %s and ct.contrato = %s and cp.rfc = %s and (cm.clave = %s or cm.clave_10posiciones = %s or cm.clave_14posiciones = %s) and os.cantidad_solicitada = %s and ca.codigo = %s and cc.clave = %s and os.estatus in (%s);"
queries["capturistaPermissionOld"] = "select count(*) from orden_suministro os join ca_contratos ct on os.id_contrato = ct.id join ca_proveedores cp on os.id_proveedor = cp.id join ca_medicamentos cm on os.id_medicamento = cm.id join ca_almacenes ca on os.id_almacen_entrega = ca.id join ca_clues cc on os.id_clues = cc.id join ca_dependencias dep on dep.id = os.id_institucion_requirente join ca_accesos cac on cac.id_dependencia = dep.id join rel_accesos_modulos ram on ram.id_usuario = cac.id where cac.usuario = %s and ram.id_modulo_sistema = 101 and cac.id_rol = 3 and cp.estatus = true and cm.estatus = true and ca.estatus = true and cc.estatus = true and dep.estatus = true and cac.estatus = true;"
queries["capturistaPermission"] = "select count(*) from orden_suministro os join ca_contratos ct on os.id_contrato = ct.id join ca_proveedores cp on os.id_proveedor = cp.id join ca_medicamentos cm on os.id_medicamento = cm.id join ca_almacenes ca on os.id_almacen_entrega = ca.id join ca_clues cc on os.id_clues = cc.id join ca_dependencias dep on dep.id = os.id_institucion_requirente join ca_accesos cac on cac.id_dependencia = dep.id join rel_accesos_modulos ram on ram.id_usuario = cac.id where cac.usuario = %s and ram.id_modulo_sistema = 101 and cac.id_rol = 3 and cp.estatus = true and cm.estatus = true and ca.estatus = true and cc.estatus = true and dep.estatus = true and cac.estatus = true;"
queries["checkPermissionValidacionOS"] = "select count(*) from orden_suministro os join ca_contratos ct on os.id_contrato = ct.id join ca_proveedores cp on os.id_proveedor = cp.id join ca_medicamentos cm on os.id_medicamento = cm.id join ca_almacenes ca on os.id_almacen_entrega = ca.id join ca_clues cc on os.id_clues = cc.id join ca_dependencias dep on dep.id = os.id_institucion_requirente join ca_accesos cac on cac.id_dependencia = dep.id join rel_accesos_modulos ram on ram.id_usuario = cac.id where cac.usuario = %s and ram.id_modulo_sistema = %s and cac.id_rol = %s and cp.estatus = true and cm.estatus = true and ca.estatus = true and cc.estatus = true and dep.estatus = true and cac.estatus = true;"

queries["rolePermission"] = "select count(*) from orden_suministro os join ca_contratos ct on os.id_contrato = ct.id join ca_proveedores cp on os.id_proveedor = cp.id join ca_medicamentos cm on os.id_medicamento = cm.id join ca_almacenes ca on os.id_almacen_entrega = ca.id join ca_clues cc on os.id_clues = cc.id join ca_dependencias dep on dep.id = os.id_institucion_requirente join ca_accesos cac on cac.id_dependencia = dep.id join rel_accesos_modulos ram on ram.id_usuario = cac.id where cac.usuario_htpasswd = %s and  cac.id_rol = ANY(%s) and ram.id_modulo_sistema = ANY(%s) and cp.estatus = true and cm.estatus = true and ca.estatus = true and cc.estatus = true and dep.estatus = true and cac.estatus = true;"


queries["checkPermissionCargaOS"] = "select count(*) from ca_contratos cc join ca_dependencias cd on cd.id = cc.id_dependencia join ca_proveedores cp on cp.id = cc.id_proveedor join rel_contrato_medicamentos rcm on rcm.id_contrato = cc.id join ca_medicamentos cm on cm.id = rcm.id_medicamento join ca_clues cc2 on cc2.id_dependencia = cd.id join ca_accesos ca on ca.id_dependencia = cd.id join rel_accesos_modulos ram on ram.id_usuario = ca.id where ca.usuario = %s and ram.id_modulo_sistema = %s and ca.id_rol = %s and cp.estatus = true and cm.estatus = true and ca.estatus = true  and cd.estatus = true and cc2.estatus = true;"

queries["countOS"] = "select count(*) from orden_suministro os join ca_contratos ct on os.id_contrato = ct.id join ca_proveedores cp on os.id_proveedor = cp.id join ca_medicamentos cm on os.id_medicamento = cm.id join ca_almacenes ca on os.id_almacen_entrega = ca.id join ca_clues cc on os.id_clues = cc.id join ca_dependencias dep on dep.id =os.id_institucion_requirente join ca_accesos cac on cac.id_dependencia = dep.id join rel_accesos_modulos ram on ram.id_usuario = cac.id where os.numero_orden_suministro = %s and ct.contrato = %s and cp.rfc = %s and (cm.clave = %s or cm.clave_10posiciones = %s or cm.clave_14posiciones = %s) and os.cantidad_solicitada = %s and ca.codigo = %s and cc.clave = %s and os.estatus in (%s) and cac.usuario = %s and ram.id_modulo_sistema = 101 and cac.id_rol = 3 and cp.estatus = true and cm.estatus = true and ca.estatus = true and cc.estatus = true and dep.estatus = true and cac.estatus = true; "

queries["countOSYaProcesada"] = "select os.estatus, os.id_orden_suministro, cac.id as id_user, ct.fecha_ini, ct.fecha_fin, ct.estatus as estatus_contrato,os.numero_orden_suministro from orden_suministro os join ca_contratos ct on os.id_contrato = ct.id join ca_proveedores cp on os.id_proveedor = cp.id join ca_medicamentos cm on os.id_medicamento = cm.id join ca_almacenes ca on os.id_almacen_entrega = ca.id join ca_clues cc on os.id_clues = cc.id join ca_dependencias dep on dep.id = os.id_institucion_requirente left join ca_accesos cac on cac.id_dependencia = os.id_institucion_requirente and cac.usuario_htpasswd  = %s where os.numero_orden_suministro = %s and ct.contrato = %s and cp.rfc = %s and (cm.clave = %s or cm.clave_10posiciones = %s) and os.cantidad_solicitada = %s and ca.codigo = %s and cc.clave = %s and cp.estatus = true and cm.estatus = true and ca.estatus = true and cc.estatus = true and dep.estatus = true and os.estatus = ANY('{1,2,9}') order by os.estatus; "
queries["countOSYaProcesada2"] = "select os.estatus, os.id_orden_suministro, cac.id as id_user, ct.fecha_ini, ct.fecha_fin, ct.estatus as estatus_contrato,os.numero_orden_suministro from orden_suministro os join ca_contratos ct on os.id_contrato = ct.id join ca_proveedores cp on os.id_proveedor = cp.id join ca_medicamentos cm on os.id_medicamento = cm.id join ca_almacenes ca on os.id_almacen_entrega = ca.id join ca_clues cc on os.id_clues = cc.id join ca_dependencias dep on dep.id = os.id_institucion_requirente left join ca_accesos cac on cac.id_dependencia = os.id_institucion_requirente and cac.usuario_htpasswd  = %s where os.numero_orden_suministro = %s and ct.contrato = %s and cp.rfc = %s and ca.codigo = %s and cp.estatus = true and cm.estatus = true and ca.estatus = true and cc.estatus = true and dep.estatus = true and os.estatus = ANY('{1,9}') order by os.estatus; "

queries["apirestOSold1"] = "select ca.descripcion as almacen, os.id_almacen_entrega as almacenId, 'usuarios' || ca.codigo as grupoUsuariosAlmacen, 'usuarios' || cp.rfc as grupoUsuariosProveedor, cd.acronimo as institucion, os.id_institucion_requirente as institucionId, cp.razon_social as nombreProveedor, os.numero_orden_suministro as numerosOrdenesSuministro, os.id_orden_suministro as ordenesSuministroIds, os.id_proveedor as proveedorId, %s as usuario from orden_suministro os join ca_almacenes ca on os.id_almacen_entrega = ca.id join ca_proveedores cp on os.id_proveedor = cp.id join ca_dependencias cd on os.id_institucion_requirente = cd.id where numero_orden_suministro = %s;"
queries["dataForApiRestCamundaOS"] = "select STRING_AGG(cast(os.id_orden_suministro as varchar), ',' ) as ordenesSuministroIds, STRING_AGG(numero_orden_suministro, ',' ) as numerosOrdenesSuministro, ca.descripcion as almacen, os.id_almacen_entrega as almacenId, 'usuarios' || ca.codigo as grupoUsuariosAlmacen, 'usuarios' || cp.rfc as grupoUsuariosProveedor, cd.acronimo as institucion, os.id_institucion_requirente as institucionId, cp.razon_social as nombreProveedor, os.id_proveedor as proveedorId, %s as initiator from orden_suministro os join ca_almacenes ca on os.id_almacen_entrega = ca.id join ca_proveedores cp on os.id_proveedor = cp.id join ca_dependencias cd on os.id_institucion_requirente = cd.id where  os.id_orden_suministro= ANY(%s)  group by almacen, os.id_almacen_entrega , ca.codigo, cp.rfc, cd.acronimo, os.id_institucion_requirente, cp.razon_social, os.id_proveedor ;"

queries["getInstitucionRequirente"] = "select id_dependencia from ca_contratos where contrato = %s"
--queries["grantCapturistaOSMasiva"] = "select count(*) from ca_accesos ca join rel_accesos_modulos ram on ram.id_usuario = ca.id join ca_modulos_sistemas cms on cms.id = ram.id_modulo_sistema join ca_roles rol on rol.id = ca.id_rol where rol.id = 3 and ca.nombre || ca.primer_apellido = %s and ram.id_modulo_sistema = 4 and cms.estatus = true and ca.estatus = true and rol.estatus = true; "
queries["institucionPorUsuario"] = "Select DISTINCT ca_dependencias.id as \"institucionId\",  ca_dependencias.acronimo as \"institucion\" from ca_dependencias inner join rel_usuarios_camunda on rel_usuarios_camunda.tipo = 'dependencias' and rel_usuarios_camunda.id = ca_dependencias.id and rel_usuarios_camunda.estatus is true and rel_usuarios_camunda.usuario = %s;"
queries["proveedorPorUsuario"] = "Select DISTINCT ca_proveedores.id as \"proveedorId\",  ca_proveedores.razon_social as \"proveedor\" from ca_proveedores inner join rel_usuarios_camunda on rel_usuarios_camunda.tipo = 'proveedores' and rel_usuarios_camunda.id = ca_proveedores.id and rel_usuarios_camunda.estatus is true and rel_usuarios_camunda.usuario = ANY(%s);"
queries["almacenPorUsuario"] = "select caa.id as \"almacenId\", caa.descripcion as \"almacen\", (select array_to_json(array_agg(row_to_json(t))) as proveedores from (select cp.id as \"proveedorId\", cp.razon_social as \"proveedor\" from ca_almacenes caa inner join orden_suministro os on os.id_almacen_entrega = caa.id inner join ca_proveedores cp on cp.id = os.id_proveedor inner join rel_usuarios_camunda ruc on ruc.tipo = 'almacenes' and ruc.id = caa.id and ruc.estatus is true where ruc.usuario = ANY(%s) group by cp.id, cp.razon_social) as t) from ca_almacenes caa inner join orden_suministro os on os.id_almacen_entrega = caa.id inner join ca_proveedores cp on cp.id = os.id_proveedor inner join rel_usuarios_camunda ruc on ruc.tipo = 'almacenes' and ruc.id = caa.id and ruc.estatus is true where ruc.usuario = ANY(%s) group by caa.id, caa.descripcion;"
queries["institucionPorJWT"] = "Select DISTINCT ca_dependencias.id as \"institucionId\",  ca_dependencias.acronimo as \"institucion\" from ca_dependencias where id = %s and (SELECT COUNT(*) from rel_accesos_modulos WHERE id_usuario = %s AND id_modulo_sistema IN (4,7) ) > 0;"
queries["proveedoresOrdenes"] = "SELECT DISTINCT ca_proveedores.id, ca_proveedores.rfc, ca_proveedores.razon_social, rel_usuarios_camunda.usuario from owmedicamentos.orden_suministro inner join ca_proveedores on ca_proveedores.id = orden_suministro.id_proveedor and ca_proveedores.estatus is true inner join rel_usuarios_camunda on rel_usuarios_camunda.tipo = 'proveedores' and rel_usuarios_camunda.id = ca_proveedores.id and rel_usuarios_camunda.estatus is true where id_institucion_requirente = %s and orden_suministro.estatus = 1;"
queries["almacenesOrdenes"] = "SELECT DISTINCT ca_almacenes.id, ca_almacenes.descripcion, ca_almacenes.direccion, rel_usuarios_camunda.usuario from owmedicamentos.orden_suministro inner join ca_almacenes on ca_almacenes.id = orden_suministro.id_almacen_entrega and ca_almacenes.estatus is true inner join rel_usuarios_camunda on rel_usuarios_camunda.tipo = 'almacenes' and rel_usuarios_camunda.id = ca_almacenes.id and rel_usuarios_camunda.estatus is true where orden_suministro.id_institucion_requirente = %s and orden_suministro.id_proveedor = %s and orden_suministro.estatus = 1;"
queries["proveedoresOrdenesInstitucion"] = "SELECT DISTINCT ca_proveedores.id, ca_proveedores.rfc, ca_proveedores.razon_social from owmedicamentos.orden_suministro inner join ca_proveedores on ca_proveedores.id = orden_suministro.id_proveedor and ca_proveedores.estatus is true inner join rel_usuarios_camunda  on rel_usuarios_camunda.tipo = 'proveedores' and rel_usuarios_camunda.id = ca_proveedores.id and rel_usuarios_camunda.estatus is true inner join rel_usuarios_camunda rus on rus.tipo = 'dependencias' and rus.id = orden_suministro.id_institucion_requirente and rus.estatus is true and rus.usuario = %s where orden_suministro.estatus = 1 order by razon_social;"
queries["almacenesOrdenesInstitucion"] = "SELECT DISTINCT ca_almacenes.id, ca_almacenes.descripcion, ca_almacenes.direccion from owmedicamentos.orden_suministro inner join ca_almacenes on ca_almacenes.id = orden_suministro.id_almacen_entrega and ca_almacenes.estatus is true inner join rel_usuarios_camunda on rel_usuarios_camunda.tipo = 'almacenes' and rel_usuarios_camunda.id = ca_almacenes.id and rel_usuarios_camunda.estatus is true inner join rel_usuarios_camunda rus on rus.tipo = 'dependencias' and rus.id = orden_suministro.id_institucion_requirente and rus.estatus is true and rus.usuario = %s where orden_suministro.id_proveedor = %s and orden_suministro.estatus = 1;"
queries["ordenesSuministroInstitucion"] = "SELECT orden_suministro.*, ca_medicamentos.clave as clave_medicamento, ca_medicamentos.descripcion as descripcion_medicamento, ca_clues.clave as clues, ca_clues.nombre as nombre_destino_final, ca_clues.direccion as direccion_destino_final, ca_entidades.descripcion as entidad_federativa_destino, ca_contratos.contrato as numero_contrato, ca_contratos.numero_procedimiento, ca_contratos.administrador_contrato as nombre_administrador from owmedicamentos.orden_suministro inner join ca_medicamentos on ca_medicamentos.id = orden_suministro.id_medicamento inner join ca_clues on ca_clues.id = orden_suministro.id_clues inner join ca_entidades on ca_entidades.id = ca_clues.id_entidad inner join ca_contratos on ca_contratos.id = orden_suministro.id_contrato inner join rel_usuarios_camunda rus on rus.tipo = 'dependencias' and rus.id = orden_suministro.id_institucion_requirente and rus.estatus is true and rus.usuario = %s where orden_suministro.id_proveedor = %s and id_almacen_entrega = %s and orden_suministro.estatus = %s;"
queries["datosValidacionInstitucion"] = "SELECT distinct rus.id as \"institucionId\", acronimo as \"institucion\", razon_social as \"nombreProveedor\", prov.usuario as \"grupoUsuariosProveedor\", ca_almacenes.descripcion as \"almacen\", alma.usuario as \"grupoUsuariosAlmacen\" from owmedicamentos.orden_suministro inner join ca_dependencias on orden_suministro.id_institucion_requirente = ca_dependencias.id and ca_dependencias.estatus is true inner join ca_proveedores on orden_suministro.id_proveedor = ca_proveedores.id and ca_proveedores.estatus is true inner join ca_almacenes on ca_almacenes.id = orden_suministro.id_almacen_entrega and ca_almacenes.estatus is true inner join rel_usuarios_camunda alma on alma.tipo = 'almacenes' and alma.id = ca_almacenes.id and alma.estatus is true inner join rel_usuarios_camunda prov on prov.tipo = 'proveedores' and prov.id = orden_suministro.id_proveedor and prov.estatus is true inner join rel_usuarios_camunda rus on rus.tipo = 'dependencias' and rus.id = orden_suministro.id_institucion_requirente and rus.estatus is true and rus.usuario = %s where orden_suministro.id_proveedor = %s and id_almacen_entrega = %s LIMIT 1;"
queries["ordenesSuministroPorEstatus"] = "SELECT orden_suministro.*, ca_medicamentos.clave as clave_medicamento, ca_medicamentos.descripcion as descripcion_medicamento, ca_clues.clave as clues, ca_clues.nombre as nombre_destino_final, ca_clues.direccion as direccion_destino_final, ca_entidades.descripcion as entidad_federativa_destino, ca_contratos.contrato as numero_contrato, ca_contratos.numero_procedimiento, ca_contratos.administrador_contrato as nombre_administrador, ca_contratos.estatus as contstatus, ca_contratos.fecha_fin from owmedicamentos.orden_suministro inner join ca_medicamentos on ca_medicamentos.id = orden_suministro.id_medicamento inner join ca_clues on ca_clues.id = orden_suministro.id_clues inner join ca_entidades on ca_entidades.id = ca_clues.id_entidad inner join ca_contratos on ca_contratos.id = orden_suministro.id_contrato where id_institucion_requirente = %s and orden_suministro.id_proveedor = %s and id_almacen_entrega = %s and orden_suministro.estatus = %s;"
queries["ordenesSuministroPorIds"] = "SELECT orden_suministro.*, ca_medicamentos.clave as clave_medicamento, ca_medicamentos.descripcion as descripcion_medicamento, ca_clues.clave as clues, ca_clues.nombre as nombre_destino_final, ca_clues.direccion as direccion_destino_final, ca_entidades.descripcion as entidad_federativa_destino, ca_contratos.contrato as numero_contrato, ca_contratos.numero_procedimiento, ca_contratos.administrador_contrato as nombre_administrador, cantidad_solicitada - coalesce( (select sum(case when estatus_operador_log  IN (1,3) then cantidad_entregar when estatus_operador_log  IN (2) then cantidad_recibida else 0 end)  from orden_remision where orden_remision.id_orden_suministro = orden_suministro.id_orden_suministro) ,0) as cantidad_pendiente_orden from owmedicamentos.orden_suministro inner join ca_medicamentos on ca_medicamentos.id = orden_suministro.id_medicamento inner join ca_clues on ca_clues.id = orden_suministro.id_clues inner join ca_entidades on ca_entidades.id = ca_clues.id_entidad inner join ca_contratos on ca_contratos.id = orden_suministro.id_contrato where orden_suministro.id_orden_suministro = ANY(%s);"
--queries["ordenesSuministroPorIdsORIGINAL"] = "SELECT orden_suministro.*, ca_medicamentos.clave as clave_medicamento, ca_medicamentos.descripcion as descripcion_medicamento, ca_clues.clave as clues, ca_clues.nombre as nombre_destino_final, ca_clues.direccion as direccion_destino_final, ca_entidades.descripcion as entidad_federativa_destino, ca_contratos.contrato as numero_contrato, ca_contratos.numero_procedimiento, ca_contratos.administrador_contrato as nombre_administrador, cantidad_solicitada - coalesce( (select sum(case when estatus IN (1,9) then cantidad_entregar when estatus IN (2,3) then cantidad_recibida else 0 end)  from orden_remision where orden_remision.id_orden_suministro = orden_suministro.id_orden_suministro) ,0) as cantidad_pendiente_orden from owmedicamentos.orden_suministro inner join ca_medicamentos on ca_medicamentos.id = orden_suministro.id_medicamento inner join ca_clues on ca_clues.id = orden_suministro.id_clues inner join ca_entidades on ca_entidades.id = ca_clues.id_entidad inner join ca_contratos on ca_contratos.id = orden_suministro.id_contrato where orden_suministro.id_orden_suministro = ANY(%s);"
queries["ordenesSuministroCorreo"] = "SELECT Distinct orden_suministro.numero_orden_suministro, orden_suministro.fecha_expedicion_orden, ca_contratos.contrato as numero_contrato, ca_contratos.numero_procedimiento, ca_proveedores.rfc, ca_proveedores.razon_social, ca_proveedores.representante_legal, ca_proveedores.correo_contacto from owmedicamentos.orden_suministro inner join ca_medicamentos on ca_medicamentos.id = orden_suministro.id_medicamento inner join ca_clues on ca_clues.id = orden_suministro.id_clues inner join ca_entidades on ca_entidades.id = ca_clues.id_entidad inner join ca_contratos on ca_contratos.id = orden_suministro.id_contrato inner join ca_proveedores on ca_proveedores.id = orden_suministro.id_proveedor where orden_suministro.id_orden_suministro = ANY(%s);"
queries["ordenesSuministroValidacion"] = "SELECT orden_suministro.id_orden_suministro,orden_suministro.numero_orden_suministro from owmedicamentos.orden_suministro inner join ca_medicamentos on ca_medicamentos.id = orden_suministro.id_medicamento inner join ca_clues on ca_clues.id = orden_suministro.id_clues inner join ca_entidades on ca_entidades.id = ca_clues.id_entidad inner join ca_contratos on ca_contratos.id = orden_suministro.id_contrato where orden_suministro.id_orden_suministro = ANY(%s) and id_institucion_requirente = %s and orden_suministro.id_proveedor = %s and id_almacen_entrega = %s and orden_suministro.estatus = 1;"
queries["ordenesSuministroPorFiltros"] = "SELECT count(*) as \"total_registros\", %s as \"registros_pagina\", CEIL(((count(*) :: numeric)/(%s :: numeric))) as \"total_paginas\" from owmedicamentos.orden_suministro where numero_orden_suministro = coalesce(%s,numero_orden_suministro) and id_contrato = coalesce(%s,id_contrato) and fecha_expedicion_orden between coalesce(%s, fecha_expedicion_orden) and coalesce(%s, fecha_expedicion_orden) and fecha_entrega_orden between coalesce(%s, fecha_entrega_orden) and coalesce(%s, fecha_entrega_orden) and orden_suministro.id_proveedor = coalesce(%s, orden_suministro.id_proveedor) and id_medicamento = coalesce(%s, id_medicamento) and id_almacen_entrega = coalesce(%s, id_almacen_entrega) and id_clues = coalesce(%s, id_clues) and id_institucion_requirente = coalesce(%s, id_institucion_requirente) and orden_suministro.estatus = coalesce(%s, orden_suministro.estatus); SELECT orden_suministro.*, ca_medicamentos.clave, ca_medicamentos.descripcion as descripcion_medicamento, ca_clues.clave as clues, ca_clues.nombre as nombre_destino_final, ca_clues.direccion as direccion_destino_final, ca_entidades.descripcion as entidad_federativa_destino, ca_contratos.contrato as numero_contrato, ca_contratos.numero_procedimiento, ca_contratos.administrador_contrato as nombre_administrador, ca_proveedores.rfc, ca_proveedores.razon_social, ca_proveedores.domicilio as proveedor_domicilio, ca_dependencias.descripcion as institucion from owmedicamentos.orden_suministro inner join ca_medicamentos on ca_medicamentos.id = orden_suministro.id_medicamento inner join ca_clues on ca_clues.id = orden_suministro.id_clues inner join ca_entidades on ca_entidades.id = ca_clues.id_entidad inner join ca_contratos on ca_contratos.id = orden_suministro.id_contrato inner join ca_proveedores on ca_proveedores.id = orden_suministro.id_proveedor inner join ca_dependencias on ca_dependencias.id = orden_suministro.id_institucion_requirente where numero_orden_suministro = coalesce(%s,numero_orden_suministro) and id_contrato = coalesce(%s,id_contrato) and fecha_expedicion_orden between coalesce(%s, fecha_expedicion_orden) and coalesce(%s, fecha_expedicion_orden) and fecha_entrega_orden between coalesce(%s, fecha_entrega_orden) and coalesce(%s, fecha_entrega_orden) and orden_suministro.id_proveedor = coalesce(%s, orden_suministro.id_proveedor) and id_medicamento = coalesce(%s, id_medicamento) and id_almacen_entrega = coalesce(%s, id_almacen_entrega) and id_clues = coalesce(%s, id_clues) and id_institucion_requirente = coalesce(%s, id_institucion_requirente) and orden_suministro.estatus = coalesce(%s, orden_suministro.estatus) order by fecha_expedicion_orden desc LIMIT %s OFFSET %s;"
queries["ordenesSuministroPorNumero"] = "Select numero_orden_suministro,0 as id_contrato,0 as id_proveedor,0 as id_almacen_entrega, null as fecha_expedicion_orden, null as fecha_entrega_orden, 0 as estatus ,true as estatus_contrato,true as estatus_almacen ,null as contrato ,null as codigo,null as descripcion, null as administrador_contrato, null as numero_procedimiento, null as partida_presupuestal, null as numero_fianza, null as fecha_ini, null as fecha_fin from orden_suministro os join ca_contratos cc on os.id_contrato = cc.id join ca_almacenes ca on os.id_almacen_entrega  = ca.id where os.numero_orden_suministro = %s and os.id_institucion_requirente = %s UNION SELECT distinct os.numero_orden_suministro, os.id_contrato, os.id_proveedor, os.id_almacen_entrega, os.fecha_expedicion_orden, os.fecha_entrega_orden, os.estatus ,cc.estatus as estatus_contrato,ca.estatus as estatus_almacen, cc.contrato ,ca.codigo ,ca.descripcion, cc.administrador_contrato, cc.numero_procedimiento, cc.partida_presupuestal, cc.numero_fianza, cc.fecha_ini , cc.fecha_fin from owmedicamentos.orden_suministro os join owmedicamentos.ca_contratos cc on os.id_contrato = cc.id join owmedicamentos.ca_almacenes ca on os.id_almacen_entrega  = ca.id where os.numero_orden_suministro = %s and os.id_institucion_requirente = %s and NOT EXISTS (Select 1 from orden_suministro os where os.numero_orden_suministro = %s and os.id_institucion_requirente = %s) order by estatus;"
--queries["ordenesSuministroPorNumero"] = "Select numero_orden_suministro,0 as id_contrato,0 as id_proveedor,0 as id_almacen_entrega, null as fecha_expedicion_orden, null as fecha_entrega_orden, 0 as estatus ,true as estatus_contrato,true as estatus_almacen ,null as contrato ,null as codigo,null as descripcion, null as administrador_contrato, null as numero_procedimiento, null as partida_presupuestal, null as numero_fianza, null as fecha_ini, null as fecha_fin from orden_suministro os join ca_contratos cc on os.id_contrato = cc.id join ca_almacenes ca on os.id_almacen_entrega  = ca.id where os.numero_orden_suministro = %s and os.estatus NOT IN (1,9) and os.id_institucion_requirente = %s UNION SELECT distinct os.numero_orden_suministro, os.id_contrato, os.id_proveedor, os.id_almacen_entrega, os.fecha_expedicion_orden, os.fecha_entrega_orden, os.estatus ,cc.estatus as estatus_contrato,ca.estatus as estatus_almacen, cc.contrato ,ca.codigo ,ca.descripcion, cc.administrador_contrato, cc.numero_procedimiento, cc.partida_presupuestal, cc.numero_fianza, cc.fecha_ini , cc.fecha_fin from owmedicamentos.orden_suministro os join owmedicamentos.ca_contratos cc on os.id_contrato = cc.id join owmedicamentos.ca_almacenes ca on os.id_almacen_entrega  = ca.id where os.numero_orden_suministro = %s and os.id_institucion_requirente = %s and os.estatus in (1,9) and NOT EXISTS (Select 1 from orden_suministro os where os.numero_orden_suministro = %s and os.estatus NOT IN (1,9) and os.id_institucion_requirente = %s) order by estatus;"
queries["ordenesSuministroJSON"] = "with t as (select orden_suministro.*,  orden_suministro.estatus as estatusos, ca_medicamentos.clave as clave_medicamento, ca_medicamentos.descripcion as descripcion_medicamento, ca_dependencias.descripcion as institucion, ca_clues.clave as clues, ca_clues.nombre as nombre_clues, ca_clues.direccion as clues_direccion, ca_proveedores.rfc, ca_proveedores.razon_social, ca_proveedores.domicilio as proveedor_domicilio, ca_almacenes.descripcion as almacen, ca_almacenes.direccion as almacen_direccion, ca_entidades.descripcion as entidad, ca_contratos.* from orden_suministro inner join ca_dependencias on ca_dependencias.id = id_institucion_requirente inner join ca_clues on ca_clues.id = id_clues inner join ca_proveedores on ca_proveedores.id = orden_suministro.id_proveedor inner join ca_almacenes on ca_almacenes.id = orden_suministro.id_almacen_entrega inner join ca_entidades on ca_entidades.id = ca_clues.id_entidad inner join ca_contratos on ca_contratos.id = orden_suministro.id_contrato inner join ca_medicamentos on ca_medicamentos.id = id_medicamento where case when %s is not null then orden_suministro.id_orden_suministro = ANY(%s) else true end and numero_orden_suministro = coalesce(%s,numero_orden_suministro) and id_contrato = coalesce(%s,id_contrato) and fecha_expedicion_orden between coalesce(%s, fecha_expedicion_orden) and coalesce(%s, fecha_expedicion_orden) and fecha_entrega_orden between coalesce(%s, fecha_entrega_orden) and coalesce(%s, fecha_entrega_orden) and orden_suministro.id_proveedor = coalesce(%s, orden_suministro.id_proveedor) and id_medicamento = coalesce(%s, id_medicamento) and id_almacen_entrega = coalesce(%s, id_almacen_entrega) and id_clues = coalesce(%s, id_clues) and id_institucion_requirente = coalesce(%s,id_institucion_requirente) and orden_suministro.estatus = ANY ( %s ) ) select institucion as \"institucionRequirente\", estatusos as \"estatusOrdenSuministro\", numero_orden_suministro as \"numeroOrdenSuministro\", rfc as \"proveedorRfc\", razon_social as \"proveedorRazonSocial\", proveedor_domicilio as \"proveedorDomicilio\", almacen as \"almacenEntrega\", almacen_direccion as \"almacenDireccion\", contrato, numero_procedimiento as \"procedimiento\", numero_fianza as \"fianza\", partida_presupuestal as \"partidaPresupuestal\", to_char(min(fecha_expedicion_orden),'dd/MM/yyyy') as \"fechaExpedicionOrden\", to_char(min(fecha_entrega_orden),'dd/MM/yyyy') as \"fechaEntregaOrden\", (select array_to_json(array_agg(row_to_json(m))) from (select clave_medicamento as clave, descripcion_medicamento as descripcion, sum(cantidad_solicitada) as \"cantidadSolicitada\", clues || ' - ' || nombre_clues as \"clues\", clues_direccion as \"destinoFinalDireccion\", entidad as \"destinoFinalEntidad\" from t as t2 where t2.numero_orden_suministro = t1.numero_orden_suministro group by id_medicamento, clave_medicamento, descripcion_medicamento, clues, nombre_clues, clues_direccion, entidad order by clave_medicamento, clues) m) as medicamentos from t as t1 group by 1,2,3,4,5,6,7,8,9,10,11,12 order by numero_orden_suministro;"
queries["obtenerHorariosDisponibles"] = "with e as (select generate_series(fecha_ini::timestamp,(fecha_fin::timestamp) - '1 minutes'::interval,'30 minutes') as fecha_hora, count(*) as conteo from rel_almacenes_eventos inner join ca_almacenes_configs on rel_almacenes_eventos.id_almacen = ca_almacenes_configs.id_almacen where date_trunc('day',fecha_ini) = to_timestamp(%s,'yyyy-MM-dd') and rel_almacenes_eventos.id_almacen = %s group by fecha_hora) Select to_char(t.fecha_hora,'HH12:MI a.m.') as text, to_char(extract('hour' from t.fecha_hora) + (extract('minute' from t.fecha_hora)/60),'999D9') as value from (select generate_series(%s::timestamp + concat(hora_ini,' hours')::interval,%s::timestamp + concat(hora_fin-duracion_horas,' hours')::interval,'30 minutes') as fecha_hora, proveedores_simultaneos,duracion_horas from ca_almacenes_configs where id_almacen = %s) as t LEFT JOIN e on t.fecha_hora = e.fecha_hora where coalesce(e.conteo,0) < proveedores_simultaneos and t.fecha_hora > current_timestamp and not exists (select 1 from e where e.fecha_hora in (select generate_series(t.fecha_hora, t.fecha_hora+concat(duracion_horas,' hours')::interval-'30 minutes'::interval,'30 minutes')) and e.conteo >= proveedores_simultaneos) order by t.fecha_hora;"
queries["medicamentosPorContratoJSON"] = "select contrato, rfc, razon_social, (select array_to_json(array_agg(row_to_json(t))) from (select clave, descripcion from ca_medicamentos inner join rel_contrato_medicamentos on ca_medicamentos.id = rel_contrato_medicamentos.id_medicamento where rel_contrato_medicamentos.id_contrato = ca_contratos.id    ) t) as medicamentos from ca_contratos inner join ca_proveedores on ca_contratos.id_proveedor = ca_proveedores.id;"
queries["ordenesRemisionPorIds"] = "SELECT orden_suministro.*, ca_medicamentos.clave as clave_medicamento, orden_remision.*, array_to_string(ARRAY(Select descripcion from ca_causas_rechazos where id = ANY(causas_rechazos)),', ') as descripciones_rechazos, CAST((CAST(orden_remision.cantidad_entregar AS DOUBLE PRECISION) / CAST(orden_remision.piezas_envase_colectivo AS DOUBLE PRECISION)) AS DOUBLE PRECISION) as cantidad_envases_colectivos, ca_medicamentos.descripcion as descripcion_medicamento, ca_clues.clave as clues, ca_clues.nombre as nombre_destino_final, ca_clues.direccion as direccion_destino_final, ca_entidades.descripcion as entidad_federativa_destino, ca_contratos.contrato as numero_contrato, ca_contratos.numero_procedimiento, ca_contratos.administrador_contrato as nombre_administrador from owmedicamentos.orden_suministro inner join ca_medicamentos on ca_medicamentos.id = orden_suministro.id_medicamento inner join ca_clues on ca_clues.id = orden_suministro.id_clues inner join orden_remision on orden_remision.id_orden_suministro = orden_suministro.id_orden_suministro inner join ca_entidades on ca_entidades.id = ca_clues.id_entidad inner join ca_contratos on ca_contratos.id = orden_suministro.id_contrato where orden_suministro.id_orden_suministro = ANY(%s);"
queries["ordenesRemisionRecibidas"] = "SELECT orden_suministro.*, ca_medicamentos.clave as clave_medicamento, orden_remision.*, array_to_string(ARRAY(Select descripcion from ca_causas_rechazos where id = ANY(causas_rechazos)),', ') as descripciones_rechazos, CAST((CAST(orden_remision.cantidad_entregar AS DOUBLE PRECISION) / CAST(orden_remision.piezas_envase_colectivo AS DOUBLE PRECISION)) AS DOUBLE PRECISION) as cantidad_envases_colectivos, ca_medicamentos.descripcion as descripcion_medicamento, ca_clues.clave as clues, ca_clues.nombre as nombre_destino_final, ca_clues.direccion as direccion_destino_final, ca_entidades.descripcion as entidad_federativa_destino, ca_contratos.contrato as numero_contrato, ca_contratos.numero_procedimiento, ca_contratos.administrador_contrato as nombre_administrador, rel_contrato_medicamentos.precio as monto_unitario from owmedicamentos.orden_suministro inner join ca_medicamentos on ca_medicamentos.id = orden_suministro.id_medicamento inner join ca_clues on ca_clues.id = orden_suministro.id_clues inner join orden_remision on orden_remision.id_orden_suministro = orden_suministro.id_orden_suministro inner join ca_entidades on ca_entidades.id = ca_clues.id_entidad inner join ca_contratos on ca_contratos.id = orden_suministro.id_contrato inner join rel_contrato_medicamentos on rel_contrato_medicamentos.id_contrato = orden_suministro.id_contrato and rel_contrato_medicamentos.id_medicamento = orden_suministro.id_medicamento where orden_suministro.id_orden_suministro = ANY(%s) and fecha_hora_entrega = %s and orden_remision.estatus > 1;"
--queries["ordenesRemisionPorNumeroOld"] = "SELECT orden_suministro.*, ca_medicamentos.clave as clave_medicamento, orden_remision.*, array_to_string(ARRAY(Select descripcion from ca_causas_rechazos where id = ANY(causas_rechazos)),', ') as descripciones_rechazos, CAST((CAST(orden_remision.cantidad_entregar AS DOUBLE PRECISION) / CAST(orden_remision.piezas_envase_colectivo AS DOUBLE PRECISION)) AS DOUBLE PRECISION) as cantidad_envases_colectivos, ca_medicamentos.descripcion as descripcion_medicamento, ca_clues.clave as clues, ca_clues.nombre as nombre_destino_final, ca_clues.direccion as direccion_destino_final, ca_entidades.descripcion as entidad_federativa_destino, ca_contratos.contrato as numero_contrato, ca_contratos.numero_procedimiento, ca_contratos.administrador_contrato as nombre_administrador, rel_contrato_medicamentos.precio as monto_unitario from owmedicamentos.orden_suministro inner join ca_medicamentos on ca_medicamentos.id = orden_suministro.id_medicamento inner join ca_clues on ca_clues.id = orden_suministro.id_clues inner join orden_remision on orden_remision.id_orden_suministro = orden_suministro.id_orden_suministro inner join ca_entidades on ca_entidades.id = ca_clues.id_entidad inner join ca_contratos on ca_contratos.id = orden_suministro.id_contrato inner join rel_contrato_medicamentos on rel_contrato_medicamentos.id_contrato = orden_suministro.id_contrato and rel_contrato_medicamentos.id_medicamento = orden_suministro.id_medicamento where numero_orden_remision = %s and orden_suministro.id_almacen_entrega = COALESCE(%s, orden_suministro.id_almacen_entrega) and orden_suministro.id_institucion_requirente = COALESCE(%s, orden_suministro.id_institucion_requirente) and orden_remision.estatus = 1;"
queries["ordenesRemisionPorNumero"] = "SELECT orden_suministro.*, ca_medicamentos.clave as clave_medicamento, orden_remision.*, array_to_string(ARRAY(Select descripcion from ca_causas_rechazos where id = ANY(causas_rechazos)),', ') as descripciones_rechazos,array_to_string(ARRAY(Select descripcion from ca_causas_edicion where id = ANY (string_to_array(orden_remision.causa_edicion,','))),', ')  as descripciones_edicion, CAST((CAST(orden_remision.cantidad_entregar AS DOUBLE PRECISION) / CAST(orden_remision.piezas_envase_colectivo AS DOUBLE PRECISION)) AS DOUBLE PRECISION) as cantidad_envases_colectivos, ca_medicamentos.descripcion as descripcion_medicamento, ca_clues.clave as clues, ca_clues.nombre as nombre_destino_final, ca_clues.direccion as direccion_destino_final, ca_entidades.descripcion as entidad_federativa_destino, ca_contratos.contrato as numero_contrato, ca_contratos.numero_procedimiento, ca_contratos.administrador_contrato as nombre_administrador, rel_contrato_medicamentos.precio as monto_unitario, orden_remision.estatus as orden_remision_estatus from owmedicamentos.orden_suministro inner join ca_medicamentos on ca_medicamentos.id = orden_suministro.id_medicamento inner join ca_clues on ca_clues.id = orden_suministro.id_clues inner join orden_remision on orden_remision.id_orden_suministro = orden_suministro.id_orden_suministro inner join ca_entidades on ca_entidades.id = ca_clues.id_entidad inner join ca_contratos on ca_contratos.id = orden_suministro.id_contrato inner join rel_contrato_medicamentos on rel_contrato_medicamentos.id_contrato = orden_suministro.id_contrato and rel_contrato_medicamentos.id_medicamento = orden_suministro.id_medicamento where numero_orden_remision = %s and orden_suministro.id_almacen_entrega = COALESCE(%s, orden_suministro.id_almacen_entrega) and orden_suministro.id_institucion_requirente = COALESCE(%s, orden_suministro.id_institucion_requirente) and (orden_remision.estatus = 1 or orden_remision.estatus = 2 or orden_remision.estatus = 3 or orden_remision.estatus = 9);"
queries["ordenesRemisionJSON"] = "with t as (select orden_suministro.*, orden_remision.*, ca_medicamentos.clave as clave_medicamento, ca_medicamentos.descripcion as descripcion_medicamento, ca_dependencias.descripcion as institucion, ca_clues.clave as clues, ca_clues.nombre as nombre_clues, ca_clues.direccion as clues_direccion, ca_proveedores.rfc, ca_proveedores.razon_social, ca_proveedores.domicilio as proveedor_domicilio, ca_almacenes.descripcion as almacen, ca_almacenes.direccion as almacen_direccion, ca_entidades.descripcion as entidad, ca_contratos.* from orden_suministro inner join orden_remision on orden_remision.id_orden_suministro = orden_suministro.id_orden_suministro inner join ca_dependencias on ca_dependencias.id = id_institucion_requirente inner join ca_clues on ca_clues.id = id_clues inner join ca_proveedores on ca_proveedores.id = orden_suministro.id_proveedor inner join ca_almacenes on ca_almacenes.id = orden_suministro.id_almacen_entrega inner join ca_entidades on ca_entidades.id = ca_clues.id_entidad inner join ca_contratos on ca_contratos.id = orden_suministro.id_contrato inner join ca_medicamentos on ca_medicamentos.id = id_medicamento where orden_suministro.id_orden_suministro = ANY(%s) and fecha_hora_entrega = %s) select institucion as \"institucionRequirente\", clues || ' - ' || nombre_clues as \"clues\", numero_orden_suministro as \"numeroOrdenSuministro\", numero_orden_remision as \"numeroOrdenRemision\", rfc as \"proveedorRfc\", razon_social as \"proveedorRazonSocial\", proveedor_domicilio as \"proveedorDomicilio\", to_char(fecha_expedicion_orden,'dd/MM/yyyy') as \"fechaExpedicionOrden\", to_char(fecha_hora_entrega,'dd/MM/yyyy') as \"fechaEntregaOrden\", almacen as \"almacenEntrega\", almacen_direccion as \"almacenDireccion\", clues_direccion as \"destinoFinalDireccion\", entidad as \"destinoFinalEntidad\", contrato, numero_procedimiento as \"procedimiento\", numero_fianza as \"fianza\", partida_presupuestal as \"partidaPresupuestal\", tarimas_totales as \"totalTarimas\", (select array_to_json(array_agg(row_to_json(m))) from (select clave_medicamento as clave, descripcion_medicamento as descripcion, (select sum(cantidad_solicitada) from orden_suministro osm where osm.estatus <> 9 and osm.numero_orden_suministro = t2.numero_orden_suministro and osm.id_medicamento = t2.id_medicamento and osm.id_clues = t2.id_clues group by t2.numero_orden_suministro, t2.id_medicamento) as \"cantidadSolicitada\", sum(cantidad_entregar) as \"cantidadEntregar\", (select array_to_json(array_agg(row_to_json(d))) from (select lote, fecha_caducidad as \"fechaCaducidad\", fecha_fabricacion as \"fechaFabricacion\", peso_envase_colectivo as \"envaseColectivoPeso\", dimensiones_envase_colectivo_alto as \"envaseColectivoDimensionesAlto\", dimensiones_envase_colectivo_ancho as \"envaseColectivoDimensionesAncho\", dimensiones_envase_colectivo_profundidad as \"envaseColectivoDimensionesProfundidad\", piezas_envase_colectivo as \"envaseColectivoNumero\", CAST((CAST(sum(cantidad_entregar) AS DOUBLE PRECISION) / CAST(piezas_envase_colectivo AS DOUBLE PRECISION)) AS DOUBLE PRECISION) as \"envaseColectivoCantidad\", codigo_barras as \"codigoBarras\", marca_medicamento as \"medicamentoMarca\", procedencia, sum(cantidad_entregar) as \"cantidadEntregar\" from t as t3 where t1.numero_orden_suministro = t3.numero_orden_suministro and t1.numero_orden_remision = t3.numero_orden_remision and t2.id_medicamento = t3.id_medicamento group by lote,fecha_caducidad,fecha_fabricacion,peso_envase_colectivo,dimensiones_envase_colectivo_alto,dimensiones_envase_colectivo_ancho,dimensiones_envase_colectivo_profundidad,piezas_envase_colectivo,codigo_barras,marca_medicamento,procedencia order by lote) d) as detalles from t as t2 where t2.numero_orden_suministro = t1.numero_orden_suministro and t2.numero_orden_remision = t1.numero_orden_remision group by id_medicamento, clave_medicamento, descripcion_medicamento, numero_orden_suministro, id_clues order by clave_medicamento) m) as medicamentos from t as t1 group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18 order by numero_orden_suministro, numero_orden_remision;"
queries["ordenesRemisionPorGruposAlmacen"] = "with t as (select orden_suministro.*, orden_remision.*, ca_medicamentos.clave as clave_medicamento, ca_medicamentos.descripcion as descripcion_medicamento, ca_dependencias.descripcion as institucion, ca_clues.clave as clues, ca_clues.nombre as nombre_clues, ca_clues.direccion as clues_direccion, ca_proveedores.rfc, ca_proveedores.razon_social, ca_proveedores.domicilio as proveedor_domicilio, ca_proveedores.telefono_contacto, ca_proveedores.correo_contacto, ca_almacenes.descripcion as almacen, ca_almacenes.direccion as almacen_direccion, ca_entidades.descripcion as entidad, rel_contrato_medicamentos.precio as monto_unitario from orden_suministro inner join orden_remision on orden_remision.id_orden_suministro = orden_suministro.id_orden_suministro and orden_remision.estatus = ANY(%s) inner join ca_dependencias on ca_dependencias.id = id_institucion_requirente inner join ca_clues on ca_clues.id = id_clues inner join ca_proveedores on ca_proveedores.id = orden_suministro.id_proveedor inner join ca_almacenes on ca_almacenes.id = orden_suministro.id_almacen_entrega inner join ca_entidades on ca_entidades.id = ca_clues.id_entidad inner join ca_medicamentos on ca_medicamentos.id = id_medicamento inner join rel_usuarios_camunda on rel_usuarios_camunda.id = orden_suministro.id_almacen_entrega and rel_usuarios_camunda.tipo = 'almacenes' inner join rel_contrato_medicamentos on rel_contrato_medicamentos.id_contrato = orden_suministro.id_contrato and rel_contrato_medicamentos.id_medicamento = orden_suministro.id_medicamento where rel_usuarios_camunda.usuario = ANY(%s) ) select institucion as \"institucionRequirente\", clues || ' - ' || nombre_clues as \"clues\", numero_orden_suministro as \"numeroOrdenSuministro\", numero_orden_remision as \"numeroOrdenRemision\", rfc as \"fabricanteRfc\", razon_social as \"fabricanteRazonSocial\", proveedor_domicilio as \"fabricanteDomicilio\", telefono_contacto as \"fabricanteTelefono\", correo_contacto as \"fabricanteCorreo\", to_char(fecha_expedicion_orden,'dd/MM/yyyy') as \"fechaExpedicionOrden\", to_char(fecha_entrega_orden,'dd/MM/yyyy') as \"fechaLimiteEntrega\", to_char(fecha_hora_entrega,'dd/MM/yyyy HH24:MI') as \"fechaEntregaOrden\", almacen as \"almacenEntrega\", almacen_direccion as \"almacenDireccion\", clues_direccion as \"destinoFinalDireccion\", entidad as \"destinoFinalEntidad\", tarimas_totales as \"totalTarimas\", numero_envio as \"numeroEnvio\", (select array_to_json(array_agg(row_to_json(m))) from (select clave_medicamento as clave, descripcion_medicamento as descripcion, (select sum(cantidad_solicitada) from orden_suministro osm where osm.numero_orden_suministro = t2.numero_orden_suministro and osm.id_medicamento = t2.id_medicamento and osm.id_clues = t2.id_clues group by t2.numero_orden_suministro, t2.id_medicamento) as \"cantidadSolicitada\", sum(cantidad_entregar) as \"cantidadEntregar\", monto_unitario as \"montoUnitario\", (select array_to_json(array_agg(row_to_json(d))) from (select lote, fecha_caducidad as \"fechaCaducidad\", fecha_fabricacion as \"fechaFabricacion\", peso_envase_colectivo as \"envaseColectivoPeso\", dimensiones_envase_colectivo_alto as \"envaseColectivoDimensionesAlto\", dimensiones_envase_colectivo_ancho as \"envaseColectivoDimensionesAncho\", dimensiones_envase_colectivo_profundidad as \"envaseColectivoDimensionesProfundidad\", piezas_envase_colectivo as \"envaseColectivoPiezas\", CAST((CAST(sum(cantidad_entregar) AS DOUBLE PRECISION) / CAST(piezas_envase_colectivo AS DOUBLE PRECISION)) AS DOUBLE PRECISION) as \"envaseColectivoCantidad\", codigo_barras as \"codigoBarras\", marca_medicamento as \"medicamentoMarca\", procedencia, sum(cantidad_entregar) as \"cantidadEntregar\" from t as t3 where t1.numero_orden_suministro = t3.numero_orden_suministro and t1.numero_orden_remision = t3.numero_orden_remision and t2.id_medicamento = t3.id_medicamento group by lote,fecha_caducidad,fecha_fabricacion,peso_envase_colectivo,dimensiones_envase_colectivo_alto,dimensiones_envase_colectivo_ancho,dimensiones_envase_colectivo_profundidad,piezas_envase_colectivo,codigo_barras,marca_medicamento,procedencia order by lote) d) as detalles from t as t2 where t2.numero_orden_suministro = t1.numero_orden_suministro and t2.numero_orden_remision = t1.numero_orden_remision group by id_medicamento, clave_medicamento, descripcion_medicamento, numero_orden_suministro, id_clues, monto_unitario order by clave_medicamento) m) as medicamentos from t as t1 group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18 order by numero_orden_suministro, numero_orden_remision;"
queries["ordenesRemisionSalida"] = "with t as (select orden_suministro.*, orden_remision.*, ca_medicamentos.clave as clave_medicamento, ca_medicamentos.descripcion as descripcion_medicamento, ca_dependencias.descripcion as institucion, ca_clues.clave as clues, ca_clues.nombre as nombre_clues, ca_clues.direccion as clues_direccion, ca_proveedores.rfc, ca_proveedores.razon_social, ca_proveedores.domicilio as proveedor_domicilio, ca_proveedores.telefono_contacto, ca_proveedores.correo_contacto, ca_almacenes.descripcion as almacen, ca_almacenes.direccion as almacen_direccion, ca_entidades.descripcion as entidad, (Select or2.cantidad_recibida - sum(coalesce(cantidad_recibida_destino,coalesce(cantidad_salida,0))) from orden_remision or2 LEFT JOIN rel_remision_entrega on rel_remision_entrega.id_orden_remision = or2.id_orden_remision LEFT JOIN orden_entrega on orden_entrega.id_orden_entrega = rel_remision_entrega.id_orden_entrega where orden_remision.id_orden_remision = or2.id_orden_remision group by or2.id_orden_remision, or2.cantidad_recibida) as cantidad_pendiente_salida from orden_suministro inner join orden_remision on orden_remision.id_orden_suministro = orden_suministro.id_orden_suministro and orden_remision.estatus = ANY(%s) and orden_remision.cantidad_recibida > 0 inner join ca_dependencias on ca_dependencias.id = id_institucion_requirente inner join ca_clues on ca_clues.id = id_clues inner join ca_proveedores on ca_proveedores.id = orden_suministro.id_proveedor inner join ca_almacenes on ca_almacenes.id = orden_suministro.id_almacen_entrega inner join ca_entidades on ca_entidades.id = ca_clues.id_entidad inner join ca_medicamentos on ca_medicamentos.id = id_medicamento inner join rel_usuarios_camunda on rel_usuarios_camunda.id = orden_suministro.id_almacen_entrega and rel_usuarios_camunda.tipo = 'almacenes' and rel_usuarios_camunda.usuario = ANY(%s)) select institucion as \"institucionRequirente\", clues || ' - ' || nombre_clues as \"clues\", numero_orden_suministro as \"numeroOrdenSuministro\", numero_orden_remision as \"numeroOrdenRemision\", rfc as \"fabricanteRfc\", razon_social as \"fabricanteRazonSocial\", proveedor_domicilio as \"fabricanteDomicilio\", telefono_contacto as \"fabricanteTelefono\", correo_contacto as \"fabricanteCorreo\", to_char(fecha_expedicion_orden,'dd/MM/yyyy') as \"fechaExpedicionOrden\", to_char(fecha_entrega_orden,'dd/MM/yyyy') as \"fechaLimiteEntrega\", to_char(fecha_hora_entrega,'dd/MM/yyyy HH24:MI') as \"fechaEntregaOrden\", almacen as \"almacenEntrega\", almacen_direccion as \"almacenDireccion\", clues_direccion as \"destinoFinalDireccion\", entidad as \"destinoFinalEntidad\", tarimas_totales as \"totalTarimas\", numero_envio as \"numeroEnvio\", (select array_to_json(array_agg(row_to_json(m))) from (select clave_medicamento as clave, descripcion_medicamento as descripcion, (select sum(cantidad_solicitada) from orden_suministro osm where osm.numero_orden_suministro = t2.numero_orden_suministro and osm.id_medicamento = t2.id_medicamento and osm.id_clues = t2.id_clues group by t2.numero_orden_suministro, t2.id_medicamento) as \"cantidadSolicitada\", sum(cantidad_entregar) as \"cantidadEntregar\", (select array_to_json(array_agg(row_to_json(d))) from (select lote, fecha_caducidad as \"fechaCaducidad\", fecha_fabricacion as \"fechaFabricacion\", peso_envase_colectivo as \"envaseColectivoPeso\", dimensiones_envase_colectivo_alto as \"envaseColectivoDimensionesAlto\", dimensiones_envase_colectivo_ancho as \"envaseColectivoDimensionesAncho\", dimensiones_envase_colectivo_profundidad as \"envaseColectivoDimensionesProfundidad\", piezas_envase_colectivo as \"envaseColectivoPiezas\", CAST((CAST(sum(cantidad_recibida) AS DOUBLE PRECISION) / CAST(piezas_envase_colectivo AS DOUBLE PRECISION)) AS DOUBLE PRECISION) as \"envaseColectivoCantidad\", codigo_barras as \"codigoBarras\", marca_medicamento as \"medicamentoMarca\", procedencia, sum(cantidad_entregar) as \"cantidadEntregar\", sum(cantidad_recibida) as \"cantidadRecibida\", sum(cantidad_pendiente_salida) as \"cantidadPendienteSalida\" from t as t3 where t1.numero_orden_suministro = t3.numero_orden_suministro and t1.numero_orden_remision = t3.numero_orden_remision and t2.id_medicamento = t3.id_medicamento group by lote,fecha_caducidad,fecha_fabricacion,peso_envase_colectivo,dimensiones_envase_colectivo_alto,dimensiones_envase_colectivo_ancho,dimensiones_envase_colectivo_profundidad,piezas_envase_colectivo,codigo_barras,marca_medicamento,procedencia order by lote) d) as detalles from t as t2 where t2.numero_orden_suministro = t1.numero_orden_suministro and t2.numero_orden_remision = t1.numero_orden_remision group by id_medicamento, clave_medicamento, descripcion_medicamento, numero_orden_suministro, id_clues order by clave_medicamento) m) as medicamentos from t as t1 where cantidad_pendiente_salida > 0 group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18 order by numero_orden_suministro, numero_orden_remision;"
queries["detalleOrdenesRemisionSalida"] = "Select * from (SELECT orden_suministro.*, ca_medicamentos.clave as clave_medicamento, orden_remision.*, (Select or2.cantidad_recibida - sum(coalesce(cantidad_recibida_destino,coalesce(cantidad_salida,0))) from orden_remision or2 LEFT JOIN rel_remision_entrega on rel_remision_entrega.id_orden_remision = or2.id_orden_remision LEFT JOIN orden_entrega on orden_entrega.id_orden_entrega = rel_remision_entrega.id_orden_entrega where orden_remision.id_orden_remision = or2.id_orden_remision group by or2.id_orden_remision, or2.cantidad_recibida) as cantidad_pendiente_salida, array_to_string(ARRAY(Select descripcion from ca_causas_rechazos where id = ANY(causas_rechazos)),', ') as descripciones_rechazos, CAST((CAST(orden_remision.cantidad_recibida AS DOUBLE PRECISION) / CAST(orden_remision.piezas_envase_colectivo AS DOUBLE PRECISION)) AS DOUBLE PRECISION) as cantidad_envases_colectivos, ca_medicamentos.descripcion as descripcion_medicamento, ca_clues.clave as clues, ca_clues.nombre as nombre_destino_final, ca_clues.direccion as direccion_destino_final, ca_entidades.descripcion as entidad_federativa_destino, ca_contratos.contrato as numero_contrato, ca_contratos.numero_procedimiento, ca_contratos.administrador_contrato as nombre_administrador from owmedicamentos.orden_suministro inner join ca_medicamentos on ca_medicamentos.id = orden_suministro.id_medicamento inner join ca_clues on ca_clues.id = orden_suministro.id_clues inner join orden_remision on orden_remision.id_orden_suministro = orden_suministro.id_orden_suministro inner join ca_entidades on ca_entidades.id = ca_clues.id_entidad inner join ca_contratos on ca_contratos.id = orden_suministro.id_contrato inner join rel_usuarios_camunda on rel_usuarios_camunda.id = orden_suministro.id_almacen_entrega and rel_usuarios_camunda.tipo = 'almacenes' and rel_usuarios_camunda.usuario = ANY(%s) where orden_remision.estatus IN (2,3) and orden_remision.cantidad_recibida > 0 and ca_clues.clave = %s) as t2 where cantidad_pendiente_salida > 0;"
queries["ordenesRemisionPorIdsRemision"] = "Select * from (SELECT orden_suministro.*, ca_medicamentos.clave as clave_medicamento, orden_remision.*, (Select or2.cantidad_recibida - sum(coalesce(cantidad_recibida_destino,coalesce(cantidad_salida,0))) from orden_remision or2 LEFT JOIN rel_remision_entrega on rel_remision_entrega.id_orden_remision = or2.id_orden_remision LEFT JOIN orden_entrega on orden_entrega.id_orden_entrega = rel_remision_entrega.id_orden_entrega where orden_remision.id_orden_remision = or2.id_orden_remision group by or2.id_orden_remision, or2.cantidad_recibida) as cantidad_pendiente_salida, array_to_string(ARRAY(Select descripcion from ca_causas_rechazos where id = ANY(causas_rechazos)),', ') as descripciones_rechazos, CAST((CAST(orden_remision.cantidad_recibida AS DOUBLE PRECISION) / CAST(orden_remision.piezas_envase_colectivo AS DOUBLE PRECISION)) AS DOUBLE PRECISION) as cantidad_envases_colectivos, ca_medicamentos.descripcion as descripcion_medicamento, ca_clues.clave as clues, ca_clues.nombre as nombre_destino_final, ca_clues.direccion as direccion_destino_final, ca_entidades.descripcion as entidad_federativa_destino, ca_contratos.contrato as numero_contrato, ca_contratos.numero_procedimiento, ca_contratos.administrador_contrato as nombre_administrador from owmedicamentos.orden_suministro inner join ca_medicamentos on ca_medicamentos.id = orden_suministro.id_medicamento inner join ca_clues on ca_clues.id = orden_suministro.id_clues inner join orden_remision on orden_remision.id_orden_suministro = orden_suministro.id_orden_suministro inner join ca_entidades on ca_entidades.id = ca_clues.id_entidad inner join ca_contratos on ca_contratos.id = orden_suministro.id_contrato inner join rel_usuarios_camunda on rel_usuarios_camunda.id = orden_suministro.id_almacen_entrega and rel_usuarios_camunda.tipo = 'almacenes' and rel_usuarios_camunda.usuario = ANY(%s) where orden_remision.estatus IN (2,3) and orden_remision.cantidad_recibida > 0 and orden_remision.id_orden_remision = ANY(%s)) as t2 where cantidad_pendiente_salida > 0;"
queries["ordenesRemisionRecepcionDestino"] = "with t as (select orden_suministro.*, orden_remision.*, orden_entrega.orden_entrega, orden_entrega.fecha_hora_salida, orden_entrega.nombre_transportista, ca_medicamentos.clave as clave_medicamento, ca_medicamentos.descripcion as descripcion_medicamento, ca_dependencias.descripcion as institucion, ca_clues.clave as clues, ca_clues.nombre as nombre_clues, ca_clues.direccion as clues_direccion, ca_proveedores.rfc, ca_proveedores.razon_social, ca_proveedores.domicilio as proveedor_domicilio, ca_proveedores.telefono_contacto, ca_proveedores.correo_contacto, ca_almacenes.descripcion as almacen, ca_almacenes.direccion as almacen_direccion, ca_entidades.descripcion as entidad, (Select or2.cantidad_recibida - sum(coalesce(cantidad_recibida_destino,coalesce(cantidad_salida,0))) from orden_remision or2 INNER JOIN rel_remision_entrega on rel_remision_entrega.id_orden_remision = or2.id_orden_remision INNER JOIN orden_entrega on orden_entrega.id_orden_entrega = rel_remision_entrega.id_orden_entrega where orden_remision.id_orden_remision = or2.id_orden_remision group by or2.id_orden_remision, or2.cantidad_recibida) as cantidad_pendiente_salida, sum(rel_remision_entrega.cantidad_salida) as cantidad_salida from orden_suministro inner join orden_remision on orden_remision.id_orden_suministro = orden_suministro.id_orden_suministro and orden_remision.cantidad_recibida > 0 INNER JOIN rel_remision_entrega on rel_remision_entrega.id_orden_remision = orden_remision.id_orden_remision INNER JOIN orden_entrega on orden_entrega.id_orden_entrega = rel_remision_entrega.id_orden_entrega inner join ca_dependencias on ca_dependencias.id = id_institucion_requirente inner join ca_clues on ca_clues.id = id_clues inner join ca_proveedores on ca_proveedores.id = orden_suministro.id_proveedor inner join ca_almacenes on ca_almacenes.id = orden_suministro.id_almacen_entrega inner join ca_entidades on ca_entidades.id = ca_clues.id_entidad inner join ca_medicamentos on ca_medicamentos.id = id_medicamento inner join rel_usuarios_camunda on rel_usuarios_camunda.id = orden_suministro.id_almacen_entrega and rel_usuarios_camunda.tipo = 'almacenes' and rel_usuarios_camunda.usuario = ANY(%s) where cantidad_recibida_destino is null group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56) select institucion as \"institucionRequirente\", clues || ' - ' || nombre_clues as \"clues\", numero_orden_suministro as \"numeroOrdenSuministro\", numero_orden_remision as \"numeroOrdenRemision\", rfc as \"fabricanteRfc\", razon_social as \"fabricanteRazonSocial\", proveedor_domicilio as \"fabricanteDomicilio\", telefono_contacto as \"fabricanteTelefono\", correo_contacto as \"fabricanteCorreo\", to_char(fecha_expedicion_orden,'dd/MM/yyyy') as \"fechaExpedicionOrden\", to_char(fecha_entrega_orden,'dd/MM/yyyy') as \"fechaLimiteEntrega\", to_char(fecha_hora_entrega,'dd/MM/yyyy HH24:MI') as \"fechaEntregaOrden\", almacen as \"almacenEntrega\", almacen_direccion as \"almacenDireccion\", clues_direccion as \"destinoFinalDireccion\", entidad as \"destinoFinalEntidad\", tarimas_totales as \"totalTarimas\", orden_entrega as \"ordenEntrega\", to_char(fecha_hora_salida,'dd/MM/yyyy HH24:MI') as \"fechaHoraSalida\", nombre_transportista as \"nombreTransportista\", numero_envio as \"numeroEnvio\", (select array_to_json(array_agg(row_to_json(m))) from (select clave_medicamento as clave, descripcion_medicamento as descripcion, (select sum(cantidad_solicitada) from orden_suministro osm where osm.numero_orden_suministro = t2.numero_orden_suministro and osm.id_medicamento = t2.id_medicamento and osm.id_clues = t2.id_clues group by t2.numero_orden_suministro, t2.id_medicamento) as \"cantidadSolicitada\", sum(cantidad_entregar) as \"cantidadEntregar\", (select array_to_json(array_agg(row_to_json(d))) from (select lote, fecha_caducidad as \"fechaCaducidad\", fecha_fabricacion as \"fechaFabricacion\", peso_envase_colectivo as \"envaseColectivoPeso\", dimensiones_envase_colectivo_alto as \"envaseColectivoDimensionesAlto\", dimensiones_envase_colectivo_ancho as \"envaseColectivoDimensionesAncho\", dimensiones_envase_colectivo_profundidad as \"envaseColectivoDimensionesProfundidad\", piezas_envase_colectivo as \"envaseColectivoPiezas\", CAST((CAST(sum(cantidad_recibida) AS DOUBLE PRECISION) / CAST(piezas_envase_colectivo AS DOUBLE PRECISION)) AS DOUBLE PRECISION) as \"envaseColectivoCantidad\", codigo_barras as \"codigoBarras\", marca_medicamento as \"medicamentoMarca\", procedencia, sum(cantidad_entregar) as \"cantidadEntregar\", sum(cantidad_recibida) as \"cantidadRecibida\", sum(cantidad_pendiente_salida) as \"cantidadPendienteSalida\", sum(cantidad_salida) as \"cantidadSalida\" from t as t3 where t1.numero_orden_suministro = t3.numero_orden_suministro and t1.numero_orden_remision = t3.numero_orden_remision and t2.id_medicamento = t3.id_medicamento and t2.orden_entrega = t3.orden_entrega group by lote,fecha_caducidad,fecha_fabricacion,peso_envase_colectivo,dimensiones_envase_colectivo_alto,dimensiones_envase_colectivo_ancho,dimensiones_envase_colectivo_profundidad,piezas_envase_colectivo,codigo_barras,marca_medicamento,procedencia order by lote) d) as detalles from t as t2 where t2.numero_orden_suministro = t1.numero_orden_suministro and t2.numero_orden_remision = t1.numero_orden_remision and t2.orden_entrega = t1.orden_entrega group by id_medicamento, clave_medicamento, descripcion_medicamento,numero_orden_suministro,id_clues,orden_entrega order by clave_medicamento) m) as medicamentos from t as t1 where cantidad_salida > 0 group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21 order by numero_orden_suministro, numero_orden_remision;"
queries["detalleOrdenesRemisionRecepcionDestino"] = "SELECT orden_suministro.*, ca_medicamentos.clave as clave_medicamento, orden_remision.*, orden_entrega, nombre_transportista, fecha_hora_salida, array_to_string(ARRAY(Select descripcion from ca_causas_rechazos where id = ANY(causas_rechazos)),', ') as descripciones_rechazos, CAST((CAST(orden_remision.cantidad_recibida AS DOUBLE PRECISION) / CAST(orden_remision.piezas_envase_colectivo AS DOUBLE PRECISION)) AS DOUBLE PRECISION) as cantidad_envases_colectivos, ca_medicamentos.descripcion as descripcion_medicamento, ca_clues.clave as clues, ca_clues.nombre as nombre_destino_final, ca_clues.direccion as direccion_destino_final, ca_entidades.descripcion as entidad_federativa_destino, ca_contratos.contrato as numero_contrato, ca_contratos.numero_procedimiento, ca_contratos.administrador_contrato as nombre_administrador, (Select or2.cantidad_recibida - sum(coalesce(cantidad_recibida_destino,coalesce(cantidad_salida,0))) from orden_remision or2 LEFT JOIN rel_remision_entrega on rel_remision_entrega.id_orden_remision = or2.id_orden_remision LEFT JOIN orden_entrega on orden_entrega.id_orden_entrega = rel_remision_entrega.id_orden_entrega where orden_remision.id_orden_remision = or2.id_orden_remision group by or2.id_orden_remision, or2.cantidad_recibida) as cantidad_pendiente_salida, cantidad_salida from owmedicamentos.orden_suministro inner join ca_medicamentos on ca_medicamentos.id = orden_suministro.id_medicamento inner join ca_clues on ca_clues.id = orden_suministro.id_clues inner join orden_remision on orden_remision.id_orden_suministro = orden_suministro.id_orden_suministro inner join ca_entidades on ca_entidades.id = ca_clues.id_entidad inner join ca_contratos on ca_contratos.id = orden_suministro.id_contrato inner join rel_usuarios_camunda on rel_usuarios_camunda.id = orden_suministro.id_almacen_entrega and rel_usuarios_camunda.tipo = 'almacenes' and rel_usuarios_camunda.usuario = ANY(%s) INNER JOIN rel_remision_entrega on rel_remision_entrega.id_orden_remision = orden_remision.id_orden_remision INNER JOIN orden_entrega on orden_entrega.id_orden_entrega = rel_remision_entrega.id_orden_entrega where orden_remision.cantidad_recibida > 0 and orden_entrega = %s and cantidad_recibida_destino is null;"
queries["ordenesRemisionRecepcionPorIdsRemision"] = "SELECT orden_suministro.*, ca_medicamentos.clave as clave_medicamento, orden_remision.*, orden_entrega.* ,rel_remision_entrega.*, array_to_string(ARRAY(Select descripcion from ca_causas_rechazos where id = ANY(causas_rechazos)),', ') as descripciones_rechazos, CAST((CAST(orden_remision.cantidad_recibida AS DOUBLE PRECISION) / CAST(orden_remision.piezas_envase_colectivo AS DOUBLE PRECISION)) AS DOUBLE PRECISION) as cantidad_envases_colectivos, ca_medicamentos.descripcion as descripcion_medicamento, ca_clues.clave as clues, ca_clues.nombre as nombre_destino_final, ca_clues.direccion as direccion_destino_final, ca_entidades.descripcion as entidad_federativa_destino, ca_contratos.contrato as numero_contrato, ca_contratos.numero_procedimiento, ca_contratos.administrador_contrato as nombre_administrador, (Select or2.cantidad_recibida - sum(coalesce(cantidad_recibida_destino,coalesce(cantidad_salida,0))) from orden_remision or2 LEFT JOIN rel_remision_entrega on rel_remision_entrega.id_orden_remision = or2.id_orden_remision LEFT JOIN orden_entrega on orden_entrega.id_orden_entrega = rel_remision_entrega.id_orden_entrega where orden_remision.id_orden_remision = or2.id_orden_remision group by or2.id_orden_remision, or2.cantidad_recibida) as cantidad_pendiente_salida from owmedicamentos.orden_suministro inner join ca_medicamentos on ca_medicamentos.id = orden_suministro.id_medicamento inner join ca_clues on ca_clues.id = orden_suministro.id_clues inner join orden_remision on orden_remision.id_orden_suministro = orden_suministro.id_orden_suministro inner join ca_entidades on ca_entidades.id = ca_clues.id_entidad inner join ca_contratos on ca_contratos.id = orden_suministro.id_contrato inner join rel_usuarios_camunda on rel_usuarios_camunda.id = orden_suministro.id_almacen_entrega and rel_usuarios_camunda.tipo = 'almacenes' and rel_usuarios_camunda.usuario = ANY(%s) INNER JOIN rel_remision_entrega on rel_remision_entrega.id_orden_remision = orden_remision.id_orden_remision INNER JOIN orden_entrega on orden_entrega.id_orden_entrega = rel_remision_entrega.id_orden_entrega where orden_remision.cantidad_recibida > 0 and orden_entrega = ANY(%s) and cantidad_recibida_destino is null and orden_remision.id_orden_remision = ANY(%s);"
queries["ordenesRemisionPorEnvio"] = "SELECT orden_suministro.*, ca_medicamentos.clave as clave_medicamento, orden_remision.*, array_to_string(ARRAY(Select descripcion from ca_causas_rechazos where id = ANY(causas_rechazos)),', ') as descripciones_rechazos, CAST((CAST(orden_remision.cantidad_entregar AS DOUBLE PRECISION) / CAST(orden_remision.piezas_envase_colectivo AS DOUBLE PRECISION)) AS DOUBLE PRECISION) as cantidad_envases_colectivos, ca_medicamentos.descripcion as descripcion_medicamento, ca_clues.clave as clues, ca_clues.nombre as nombre_destino_final, ca_clues.direccion as direccion_destino_final, ca_entidades.descripcion as entidad_federativa_destino, ca_contratos.contrato as numero_contrato, ca_contratos.numero_procedimiento, ca_contratos.administrador_contrato as nombre_administrador, rel_contrato_medicamentos.precio as monto_unitario from owmedicamentos.orden_suministro inner join ca_medicamentos on ca_medicamentos.id = orden_suministro.id_medicamento inner join ca_clues on ca_clues.id = orden_suministro.id_clues inner join orden_remision on orden_remision.id_orden_suministro = orden_suministro.id_orden_suministro inner join ca_entidades on ca_entidades.id = ca_clues.id_entidad inner join ca_contratos on ca_contratos.id = orden_suministro.id_contrato inner join rel_contrato_medicamentos on rel_contrato_medicamentos.id_contrato = orden_suministro.id_contrato and rel_contrato_medicamentos.id_medicamento = orden_suministro.id_medicamento where numero_envio = %s and orden_remision.estatus IN (1,2,3);"
queries["ordenesRemisionRecibidasPorEnvio"] = "SELECT orden_suministro.*, ca_medicamentos.clave as clave_medicamento, orden_remision.*, array_to_string(ARRAY(Select descripcion from ca_causas_rechazos where id = ANY(causas_rechazos)),', ') as descripciones_rechazos, CAST((CAST(orden_remision.cantidad_entregar AS DOUBLE PRECISION) / CAST(orden_remision.piezas_envase_colectivo AS DOUBLE PRECISION)) AS DOUBLE PRECISION) as cantidad_envases_colectivos, ca_medicamentos.descripcion as descripcion_medicamento, ca_clues.clave as clues, ca_clues.nombre as nombre_destino_final, ca_clues.direccion as direccion_destino_final, ca_entidades.descripcion as entidad_federativa_destino, ca_contratos.contrato as numero_contrato, ca_contratos.numero_procedimiento, ca_contratos.administrador_contrato as nombre_administrador from owmedicamentos.orden_suministro inner join ca_medicamentos on ca_medicamentos.id = orden_suministro.id_medicamento inner join ca_clues on ca_clues.id = orden_suministro.id_clues inner join orden_remision on orden_remision.id_orden_suministro = orden_suministro.id_orden_suministro inner join ca_entidades on ca_entidades.id = ca_clues.id_entidad inner join ca_contratos on ca_contratos.id = orden_suministro.id_contrato where numero_envio = %s and orden_remision.estatus > 1;"
queries["numeroEnvio"] = "select count(*) from orden_remision where numero_envio = %s;"
queries["dependenciaPorId"] = "Select id, acronimo, descripcion, rfc from ca_dependencias where estatus is true and id = %s; "
queries["proveedorPorId"] = "select id, rfc, razon_social, representante_legal, domicilio, telefono_contacto, extension_contacto, correo_contacto, correo_facturacion from ca_proveedores where estatus is true and id = %s; "
queries["almacenPorId"] = "Select id,codigo,descripcion,encargado_almacen,direccion from ca_almacenes where estatus is true and id = %s; "
queries["relacionUsuario"] = "select usuario from owmedicamentos.rel_usuarios_camunda where id = %s and tipo = %s and estatus = true;"
--queries["cluesPorUbicacion"] = "select * from (select id, nombre, direccion, distance(%s,%s,latitud,longitud) as distancia, latitud, longitud from ca_clues_app where estatus = true and id_nivel_atencion in (1) and latitud is not null and longitud is not null) as t where distancia < 250 order by 4 asc limit 15;"
--queries["cluesPorEntidad"] = "select id, nombre, direccion, latitud, longitud from ca_clues_app where estatus = true and id_nivel_atencion in (1) and id_entidad = %s order by 2;"
--queries["cluesPorCP"] = "select * from (select id, nombre, direccion, distance((select lat from ca_cp where cp = %s),(select lon from ca_cp where cp = %s),latitud,longitud) as distancia, latitud, longitud from ca_clues_app where estatus = true and id_nivel_atencion in (1) and latitud is not null and longitud is not null) as t where distancia < 250 order by 4 asc limit 15;select lat, lon from ca_cp where cp = %s;"
queries["cluesPorUbicacion"] = "select * from (select *, distance(%s,%s,latitud,longitud) as distancia from ca_clues_app2 where estatus = true and id_nivel_atencion = ANY(%s) and latitud is not null and longitud is not null) as t where distancia < 250 order by distancia asc limit 15;"
queries["cluesPorEntidad"] = "select * from ca_clues_app2 where estatus = true and id_nivel_atencion = ANY(%s) and clave_entidad = %s order by 2;"
queries["cluesPorCP"] = "select * from (select *, distance((select lat from ca_cp where cp = %s),(select lon from ca_cp where cp = %s),latitud,longitud) as distancia from ca_clues_app2 where estatus = true and id_nivel_atencion = ANY(%s) and latitud is not null and longitud is not null) as t where distancia < 250 order by distancia asc limit 15;select lat, lon from ca_cp where cp = %s;"
queries["consejos"] = "select titulo, resumen, imagen as imagen from ca_consejos where estatus = true order by id;"
queries["avisos"] = "select titulo, resumen, cuerpo from ca_avisos where estatus = true order by id;"
--queries["actualizacion"] = "select current_timestamp as fecha; select id,titulo, resumen, cuerpo, estatus from ca_avisos where ca_avisos_ultima_actualizacion > %s order by id; select id,titulo, resumen, 'https://alfa.gob.mx' || imagen as imagen, estatus from ca_consejos where ca_consejos_ultima_actualizacion > %s order by id; select id, nombre, direccion, latitud, longitud, estatus from ca_clues_app where ca_clues_app_ultima_actualizacion > %s order by id;"
queries["actualizacion"] = "select current_timestamp as fecha; select id,titulo, resumen, cuerpo, estatus from ca_avisos where ca_avisos_ultima_actualizacion > %s order by id; select id,titulo, resumen, imagen as imagen, estatus from ca_consejos where ca_consejos_ultima_actualizacion > %s order by id; select * from ca_clues_app2 where ca_clues_app2_ultima_actualizacion > %s order by id; select * from ca_preguntas where ca_preguntas_ultima_actualizacion > %s order by id; select * from ca_respuestas where ca_respuestas_ultima_actualizacion > %s order by id; select version from ca_version_app where plataforma = %s;"
queries["proveedorPorRfc"] = "select id from ca_proveedores where estatus is true and rfc = %s ; "
queries["usuarioxId"] = "select id_dependencia, cd.estatus as depestatus, ca.estatus, ca.id_rol  from ca_accesos ca join ca_dependencias cd on ca.id_dependencia = cd.id  where concat(ca.nombre ,ca.primer_apellido ) = %s or ca.usuario_htpasswd  = %s  ; "
queries["crearContrato"] = "INSERT INTO owmedicamentos.ca_contratos (id_dependencia, id_proveedor, contrato, fecha_ini, fecha_fin, administrador_contrato, numero_procedimiento, partida_presupuestal, numero_fianza, estatus, fecha_reg, usuario_reg ) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, true, current_timestamp, %s ) RETURNING id,contrato;"
queries["medicamentoId"] ="select id,clave from ca_medicamentos cm where clave = ANY(%s) and estatus = true ;"
queries["relContratoMedicamentos"] ="INSERT INTO owmedicamentos.rel_contrato_medicamentos (id_medicamento, id_contrato, cantidad_max, cantidad_min, precio, cantidad_disponible) VALUES(%s, %s, %s, %s, %s, %s) RETURNING id;"
queries["contratosDependencia"] ="select contrato,id_dependencia  from ca_contratos where contrato = ANY(%s) ;"
queries["contratosStatus"] ="select contrato,id_dependencia,id_proveedor,fecha_fin from ca_contratos where contrato = ANY(%s) ;"
queries["updateContratos"] ="UPDATE owmedicamentos.ca_contratos SET estatus=%s, fecha_mod=current_timestamp, usuario_mod =%s WHERE contrato =%s AND id_dependencia=%s AND id_proveedor=%s RETURNING contrato,estatus ;"


queries["guardarOrdenSuministro"] = "INSERT INTO owmedicamentos.orden_suministro(numero_orden_suministro, id_institucion_requirente, id_contrato, fecha_expedicion_orden, fecha_entrega_orden, id_proveedor, id_medicamento, cantidad_solicitada, id_almacen_entrega, id_clues, origen, usuario_carga) SELECT %s,%s,(Select id from ca_contratos where contrato = %s and id_dependencia = %s), coalesce((Select fecha_expedicion_orden from orden_suministro where numero_orden_suministro = %s and id_institucion_requirente = %s Limit 1) , coalesce(%s, now())), coalesce((Select fecha_entrega_orden from orden_suministro where numero_orden_suministro = %s and id_institucion_requirente = %s Limit 1) , coalesce(%s,CURRENT_DATE + INTERVAL '14 day')), (select id from ca_proveedores where rfc = %s and estatus = true),(select id from ca_medicamentos where clave = %s),%s,(Select id from ca_almacenes where codigo = %s and estatus = true),(Select id from ca_clues where clave = %s and id_dependencia = %s and estatus = true),1, %s WHERE NOT EXISTS (Select 1 from orden_suministro where numero_orden_suministro = %s and estatus NOT IN (1,9) and id_institucion_requirente = %s)  RETURNING id_orden_suministro, numero_orden_suministro; "
queries["datosValidacionOrdenSuministro"] = "select rcm.id, rcm.cantidad_disponible from ca_contratos cc join ca_dependencias cd on cd.id = cc.id_dependencia and cd.estatus = true and cd.id = %s join ca_clues cc2 on cc2.id_dependencia = cd.id and cc2.estatus = true and cc2.clave = %s join ca_proveedores cp on cp.id = cc.id_proveedor and cp.estatus = true join rel_contrato_medicamentos rcm on rcm.id_contrato = cc.id and (rcm.cantidad_disponible - %s) >= 0 join ca_medicamentos cm on cm.id = rcm.id_medicamento and cm.estatus = true join ca_accesos ca on ca.id_dependencia = cd.id and ca.estatus = true join rel_accesos_modulos ram on ram.id_usuario = ca.id where ca.usuario_htpasswd = %s and ram.id_modulo_sistema = 102 and ca.id_rol = 3 and rcm.id_contrato = (select id from ca_contratos cc3 where cc3.contrato = %s and cc3.id_dependencia = %s) and %s::timestamp::date between cc.fecha_ini::timestamp::date and cc.fecha_fin::timestamp::date and cp.rfc = %s and cm.clave = %s group by rcm.id, rcm.cantidad_disponible limit 1;"
queries["actualizarCantidadDisponibleOS"] = "UPDATE owmedicamentos.rel_contrato_medicamentos set cantidad_disponible = coalesce(coalesce (cantidad_disponible - %s, null), cantidad_disponible) where id = %s returning id;"
queries["obtenerMensajeErrorOS"] = "select %s as in_dependencia, %s as in_clave, %s as in_contrato, %s as in_cantidad_solicitada, %s as in_fecha_expedicion, %s in_rfc, %s as in_clave_medicamento, %s as in_usuario, %s as in_numero_os, %s as in_almacen_entrega, %s as in_fecha_ent, rcm.id rel_contrato_med,rcm.cantidad_disponible, case when (rcm.cantidad_disponible - %s) >= 0 then null else 'La cantidad solicitada supera la cantidad disponible' end as cantidad_disponible_message, cc.fecha_ini, cc.fecha_fin, case when %s between cc.fecha_ini and cc.fecha_fin then null else 'La fecha no es válida' end as fecha_message,cp.rfc,case when cp.rfc <> %s then 'El rfc es inválido' else null end rfc_message, cm.clave, case when cm.clave <> %s then 'La clave de medicamento no es válida' else null end clave_med_message from ca_contratos cc join ca_dependencias cd on cd.id = cc.id_dependencia and cd.estatus = true  and cd.id = %s join ca_clues cc2 on cc2.id_dependencia = cd.id and cc2.estatus = true  and cc2.clave = %s join ca_proveedores cp on cp.id = cc.id_proveedor and cp.estatus = true join rel_contrato_medicamentos rcm on rcm.id_contrato = cc.id join ca_medicamentos cm on cm.id = rcm.id_medicamento and cm.estatus = true join ca_accesos ca on ca.id_dependencia = cd.id and ca.estatus = true join rel_accesos_modulos ram on ram.id_usuario = ca.id where ca.usuario_htpasswd = %s and ram.id_modulo_sistema = 102 and ca.id_rol = 3 and cc.contrato = %s order by rel_contrato_med, cantidad_disponible_message, fecha_message, rfc_message, clave_med_message; "
queries["validacionesCargaOS"] = "select %s as in_dependencia, %s as in_contrato, %s as in_usuario, %s as in_numero_os, case when (select distinct ca.id_dependencia from ca_dependencias cd  join ca_accesos ca on ca.id_dependencia = cd.id where  cd.estatus = true and ca.usuario_htpasswd = %s) = %s then null else 'La dependencia es inválida o está inactiva. ' end as dependencia_message, case when (select distinct contrato from ca_contratos cc join ca_dependencias cd on cd.id = cc.id_dependencia and cd.estatus = true and cd.id = %s join ca_accesos ca on ca.id_dependencia = cd.id and ca.estatus = true join rel_accesos_modulos ram on ram.id_usuario = ca.id and ram.id_modulo_sistema = 102 where cc.estatus = true and cc.contrato = %s and cc.fecha_fin >= current_date and ca.usuario_htpasswd = %s) = %s then null else 'El contrato es inválido, está inactivo o no es vigente. ' end as contrato_message, case when (select distinct cc2.clave from ca_dependencias cd join ca_clues cc2 on cc2.id_dependencia = cd.id and cc2.estatus = true and cc2.clave = %s where  cd.estatus = true and cd.id = %s) = %s then null else 'La clues es inválida o está inactiva. ' end as clues_message,case when (select distinct cp.rfc from ca_contratos cc join ca_dependencias cd on cd.id = cc.id_dependencia and cd.estatus = true  and cd.id = %s join ca_proveedores cp on cp.id = cc.id_proveedor and cp.estatus = true where cc.contrato = %s and cp.rfc = %s) = %s then null else 'El rfc del proveedor es inválido o está inactivo. ' end as rfc_message,case when (select %s between cc.fecha_ini::timestamp::date and cc.fecha_fin::timestamp::date from ca_contratos cc join ca_dependencias cd on cd.id = cc.id_dependencia and cd.estatus = true  and cd.id = %s where cc.estatus = true and cc.contrato = %s) is true then null else 'La fecha de expedición no es válida, verificar la vigencia del contrato. ' end as fecha_message, case when (select distinct cm.clave from ca_contratos cc join rel_contrato_medicamentos rcm on rcm.id_contrato = cc.id join ca_medicamentos cm on cm.id = rcm.id_medicamento and cm.estatus = true where cc.estatus = true and cc.contrato = %s and cm.clave = %s) = %s then null else 'La clave del medicamento es inválido o está inactivo. ' end as medicamento_message,case when (select rcm.cantidad_disponible - %s from ca_contratos cc join rel_contrato_medicamentos rcm on rcm.id_contrato = cc.id join ca_medicamentos cm on cm.id = rcm.id_medicamento and cm.estatus = true where cc.estatus = true and cc.contrato = %s and cm.clave = %s and cc.id_dependencia = %s) >= 0 then null else 'La cantidad solicitada rebasa la cantidad disponible. ' end as cantidad_sol_message,case when (select ca2.codigo from ca_almacenes ca2 where ca2.estatus = true and codigo = %s) = %s then null else 'El almacén es inválido o está inactivo' end as almacen_message;"
queries["validacionUsuarioOS"] = "select ca.estatus, ca.id_rol, ram.id_modulo_sistema from ca_accesos ca join rel_accesos_modulos ram on ram.id_usuario = ca.id where ca.usuario_htpasswd = %s and id_modulo_sistema = 102;"
queries["validacionUsuarioOSws"] = "select ca.estatus, ca.id_rol, ram.id_modulo_sistema, id_dependencia from ca_accesos ca join rel_accesos_modulos ram on ram.id_usuario = ca.id where ca.usuario_htpasswd = %s and id_modulo_sistema = 102;"
queries["obtenerOSPValidarDatos"] = "select os.id_orden_suministro, os.numero_orden_suministro, cc.contrato, os.id_institucion_requirente, ca.codigo almacenEntregaCodigo, cp.rfc, rcm.cantidad_disponible from owmedicamentos.orden_suministro os join rel_contrato_medicamentos rcm on rcm.id_contrato = os.id_contrato and rcm.id_medicamento = os.id_medicamento join ca_almacenes ca on ca.id = os.id_almacen_entrega and ca.estatus = true join ca_contratos cc on cc.id = os.id_contrato and cc.id_dependencia = os.id_institucion_requirente join ca_proveedores cp on cp.id = cc.id_proveedor and cp.estatus = true and cc.id_proveedor = os.id_proveedor and cc.estatus = true where os.numero_orden_suministro = %s and os.estatus = 1 limit 1;"
queries["guardarNotasOperadorLogistico"] = "update orden_remision set notas_operador_log = (select case when (notas_operador_log is not null) and (%s = 3) then %s || '|' || notas_operador_log when (notas_operador_log is null) and (%s=3) then %s else notas_operador_log end), estatus_operador_log = %s, inicio_recepcion_usu_qr = %s, inicio_recepcion_oper_log = %s where id_orden_remision = %s and numero_envio = %s returning id_usr_qr; "
queries["obtenerIdxUsuario"] = "select id from owmedicamentos.ca_accesos where usuario = %s ;"
queries["obtenerUsuario"] = "SELECT id, usuario, nombre, primer_apellido FROM ca_accesos where id = %s;"
queries["almacenPorUsuarioConOrdenes"] = "select caa.id as \"almacenId\", caa.descripcion as \"almacen\", (select array_to_json(array_agg(row_to_json(t))) as proveedores from (select cp.id as \"proveedorId\", cp.razon_social as \"proveedor\" from ca_almacenes caa inner join orden_suministro os on os.id_almacen_entrega = caa.id inner join ca_proveedores cp on cp.id = os.id_proveedor inner join rel_usuarios_camunda ruc on ruc.tipo = 'almacenes' and os.estatus in (4,5) and ruc.id = caa.id and ruc.estatus is true where ruc.usuario = ANY(%s) group by cp.id, cp.razon_social) as t) from ca_almacenes caa inner join orden_suministro os on os.id_almacen_entrega = caa.id inner join ca_proveedores cp on cp.id = os.id_proveedor inner join rel_usuarios_camunda ruc on ruc.tipo = 'almacenes' and ruc.id = caa.id and ruc.estatus is true where ruc.usuario = ANY(%s) group by caa.id, caa.descripcion;"
queries["ordenesSuministroPorFiltrosSinRemision"] = "SELECT count(*) as \"total_registros\", %s as \"registros_pagina\", CEIL(((count(*) :: numeric)/(%s :: numeric))) as \"total_paginas\" from owmedicamentos.orden_suministro where numero_orden_suministro = coalesce(%s,numero_orden_suministro) and id_contrato = coalesce(%s,id_contrato) and fecha_expedicion_orden between coalesce(%s, fecha_expedicion_orden) and coalesce(%s, fecha_expedicion_orden) and fecha_entrega_orden between coalesce(%s, fecha_entrega_orden) and coalesce(%s, fecha_entrega_orden) and orden_suministro.id_proveedor = coalesce(%s, orden_suministro.id_proveedor) and id_medicamento = coalesce(%s, id_medicamento) and id_almacen_entrega = coalesce(%s, id_almacen_entrega) and id_clues = coalesce(%s, id_clues) and id_institucion_requirente = coalesce(%s, id_institucion_requirente) and orden_suministro.estatus = coalesce(%s, orden_suministro.estatus) AND (case when orden_suministro.estatus = 2 THEN (select count(orden_remision.*) from orden_remision where orden_remision.id_orden_suministro = orden_suministro.id_orden_suministro) else 0 end ) = 0; SELECT orden_suministro.*, ca_medicamentos.clave, ca_medicamentos.descripcion as descripcion_medicamento, ca_clues.clave as clues, ca_clues.nombre as nombre_destino_final, ca_clues.direccion as direccion_destino_final, ca_entidades.descripcion as entidad_federativa_destino, ca_contratos.contrato as numero_contrato, ca_contratos.numero_procedimiento, ca_contratos.administrador_contrato as nombre_administrador, ca_proveedores.rfc, ca_proveedores.razon_social, ca_proveedores.domicilio as proveedor_domicilio, ca_dependencias.descripcion as institucion from owmedicamentos.orden_suministro inner join ca_medicamentos on ca_medicamentos.id = orden_suministro.id_medicamento inner join ca_clues on ca_clues.id = orden_suministro.id_clues inner join ca_entidades on ca_entidades.id = ca_clues.id_entidad inner join ca_contratos on ca_contratos.id = orden_suministro.id_contrato inner join ca_proveedores on ca_proveedores.id = orden_suministro.id_proveedor inner join ca_dependencias on ca_dependencias.id = orden_suministro.id_institucion_requirente where numero_orden_suministro = coalesce(%s,numero_orden_suministro) and id_contrato = coalesce(%s,id_contrato) and fecha_expedicion_orden between coalesce(%s, fecha_expedicion_orden) and coalesce(%s, fecha_expedicion_orden) and fecha_entrega_orden between coalesce(%s, fecha_entrega_orden) and coalesce(%s, fecha_entrega_orden) and orden_suministro.id_proveedor = coalesce(%s, orden_suministro.id_proveedor) and id_medicamento = coalesce(%s, id_medicamento) and id_almacen_entrega = coalesce(%s, id_almacen_entrega) and id_clues = coalesce(%s, id_clues) and id_institucion_requirente = coalesce(%s, id_institucion_requirente) and orden_suministro.estatus = coalesce(%s, orden_suministro.estatus) AND (case when orden_suministro.estatus = 2 THEN (select count(orden_remision.*) from orden_remision where orden_remision.id_orden_suministro = orden_suministro.id_orden_suministro) else 0 end ) = 0 order by fecha_expedicion_orden desc LIMIT %s OFFSET %s;"
queries["ordenesSuministroPorFiltroProgramada"] = "SELECT count(*) as \"total_registros\", %s as \"registros_pagina\", CEIL(((count(*) :: numeric)/(%s :: numeric))) as \"total_paginas\" from owmedicamentos.orden_suministro where numero_orden_suministro = coalesce(%s,numero_orden_suministro) and id_contrato = coalesce(%s,id_contrato) and fecha_expedicion_orden between coalesce(%s, fecha_expedicion_orden) and coalesce(%s, fecha_expedicion_orden) and fecha_entrega_orden between coalesce(%s, fecha_entrega_orden) and coalesce(%s, fecha_entrega_orden) and orden_suministro.id_proveedor = coalesce(%s, orden_suministro.id_proveedor) and id_medicamento = coalesce(%s, id_medicamento) and id_almacen_entrega = coalesce(%s, id_almacen_entrega) and id_clues = coalesce(%s, id_clues) and id_institucion_requirente = coalesce(%s, id_institucion_requirente) and orden_suministro.estatus in (%s,2) AND (case when orden_suministro.estatus = 2 THEN (select count(orden_remision.*) from orden_remision where orden_remision.id_orden_suministro = orden_suministro.id_orden_suministro) else 1 end) > 0; SELECT orden_suministro.*, ca_medicamentos.clave, ca_medicamentos.descripcion as descripcion_medicamento, ca_clues.clave as clues, ca_clues.nombre as nombre_destino_final, ca_clues.direccion as direccion_destino_final, ca_entidades.descripcion as entidad_federativa_destino, ca_contratos.contrato as numero_contrato, ca_contratos.numero_procedimiento, ca_contratos.administrador_contrato as nombre_administrador, ca_proveedores.rfc, ca_proveedores.razon_social, ca_proveedores.domicilio as proveedor_domicilio, ca_dependencias.descripcion as institucion from owmedicamentos.orden_suministro inner join ca_medicamentos on ca_medicamentos.id = orden_suministro.id_medicamento inner join ca_clues on ca_clues.id = orden_suministro.id_clues inner join ca_entidades on ca_entidades.id = ca_clues.id_entidad inner join ca_contratos on ca_contratos.id = orden_suministro.id_contrato inner join ca_proveedores on ca_proveedores.id = orden_suministro.id_proveedor inner join ca_dependencias on ca_dependencias.id = orden_suministro.id_institucion_requirente where numero_orden_suministro = coalesce(%s,numero_orden_suministro) and id_contrato = coalesce(%s,id_contrato) and fecha_expedicion_orden between coalesce(%s, fecha_expedicion_orden) and coalesce(%s, fecha_expedicion_orden) and fecha_entrega_orden between coalesce(%s, fecha_entrega_orden) and coalesce(%s, fecha_entrega_orden) and orden_suministro.id_proveedor = coalesce(%s, orden_suministro.id_proveedor) and id_medicamento = coalesce(%s, id_medicamento) and id_almacen_entrega = coalesce(%s, id_almacen_entrega) and id_clues = coalesce(%s, id_clues) and id_institucion_requirente = coalesce(%s, id_institucion_requirente) and orden_suministro.estatus in (%s, 2) AND (case when orden_suministro.estatus = 2 THEN (select count(orden_remision.*) from orden_remision where orden_remision.id_orden_suministro = orden_suministro.id_orden_suministro) else 1 end) > 0 order by fecha_expedicion_orden desc LIMIT %s OFFSET %s;"
queries["consultaCanceladas"] = "select os.id_orden_suministro, numero_orden_suministro,cantidad_solicitada,ct.contrato ,cp.rfc,ca.codigo , cc.clave as clues,cm.clave as clavemed from orden_suministro os join ca_contratos ct on os.id_contrato = ct.id join ca_proveedores cp on os.id_proveedor = cp.id join ca_almacenes ca on os.id_almacen_entrega = ca.id join ca_clues cc on os.id_clues = cc.id join ca_medicamentos cm on os.id_medicamento = cm.id where os.numero_orden_suministro = ANY(%s) and os.estatus = 9  ;"
queries["ordenesSuministroPorFiltroParcialmente"] = "SELECT count(*) as \"total_registros\", %s as \"registros_pagina\", CEIL(((count(*) :: numeric)/(%s :: numeric))) as \"total_paginas\" from owmedicamentos.orden_suministro where numero_orden_suministro = coalesce(%s,numero_orden_suministro) and id_contrato = coalesce(%s,id_contrato) and fecha_expedicion_orden between coalesce(%s, fecha_expedicion_orden) and coalesce(%s, fecha_expedicion_orden) and fecha_entrega_orden between coalesce(%s, fecha_entrega_orden) and coalesce(%s, fecha_entrega_orden) and orden_suministro.id_proveedor = coalesce(%s, orden_suministro.id_proveedor) and id_medicamento = coalesce(%s, id_medicamento) and id_almacen_entrega = coalesce(%s, id_almacen_entrega) and id_clues = coalesce(%s, id_clues) and id_institucion_requirente = coalesce(%s, id_institucion_requirente) and orden_suministro.estatus in (%s,5) AND orden_suministro.cantidad_solicitada > (select (sum(cantidad_entregar)) from orden_remision where orden_remision.id_orden_suministro = orden_suministro.id_orden_suministro); SELECT orden_suministro.*, ca_medicamentos.clave, ca_medicamentos.descripcion as descripcion_medicamento, ca_clues.clave as clues, ca_clues.nombre as nombre_destino_final, ca_clues.direccion as direccion_destino_final, ca_entidades.descripcion as entidad_federativa_destino, ca_contratos.contrato as numero_contrato, ca_contratos.numero_procedimiento, ca_contratos.administrador_contrato as nombre_administrador, ca_proveedores.rfc, ca_proveedores.razon_social, ca_proveedores.domicilio as proveedor_domicilio, ca_dependencias.descripcion as institucion from owmedicamentos.orden_suministro inner join ca_medicamentos on ca_medicamentos.id = orden_suministro.id_medicamento inner join ca_clues on ca_clues.id = orden_suministro.id_clues inner join ca_entidades on ca_entidades.id = ca_clues.id_entidad inner join ca_contratos on ca_contratos.id = orden_suministro.id_contrato inner join ca_proveedores on ca_proveedores.id = orden_suministro.id_proveedor inner join ca_dependencias on ca_dependencias.id = orden_suministro.id_institucion_requirente where numero_orden_suministro = coalesce(%s,numero_orden_suministro) and id_contrato = coalesce(%s,id_contrato) and fecha_expedicion_orden between coalesce(%s, fecha_expedicion_orden) and coalesce(%s, fecha_expedicion_orden) and fecha_entrega_orden between coalesce(%s, fecha_entrega_orden) and coalesce(%s, fecha_entrega_orden) and orden_suministro.id_proveedor = coalesce(%s, orden_suministro.id_proveedor) and id_medicamento = coalesce(%s, id_medicamento) and id_almacen_entrega = coalesce(%s, id_almacen_entrega) and id_clues = coalesce(%s, id_clues) and id_institucion_requirente = coalesce(%s, id_institucion_requirente) and orden_suministro.estatus in ( %s ,5 ) AND orden_suministro.cantidad_solicitada > (select (sum(cantidad_entregar)) from orden_remision where orden_remision.id_orden_suministro = orden_suministro.id_orden_suministro) order by fecha_expedicion_orden desc LIMIT %s OFFSET %s;"
queries["ordenesSuministroPorFiltroRecibida"] = "SELECT count(*) as \"total_registros\", %s as \"registros_pagina\", CEIL(((count(*) :: numeric)/(%s :: numeric))) as \"total_paginas\" from owmedicamentos.orden_suministro where numero_orden_suministro = coalesce(%s,numero_orden_suministro) and id_contrato = coalesce(%s,id_contrato) and fecha_expedicion_orden between coalesce(%s, fecha_expedicion_orden) and coalesce(%s, fecha_expedicion_orden) and fecha_entrega_orden between coalesce(%s, fecha_entrega_orden) and coalesce(%s, fecha_entrega_orden) and orden_suministro.id_proveedor = coalesce(%s, orden_suministro.id_proveedor) and id_medicamento = coalesce(%s, id_medicamento) and id_almacen_entrega = coalesce(%s, id_almacen_entrega) and id_clues = coalesce(%s, id_clues) and id_institucion_requirente = coalesce(%s, id_institucion_requirente) and orden_suministro.estatus in (%s) AND orden_suministro.cantidad_solicitada = (select (sum(cantidad_recibida)) from orden_remision where orden_remision.id_orden_suministro = orden_suministro.id_orden_suministro); SELECT orden_suministro.*, ca_medicamentos.clave, ca_medicamentos.descripcion as descripcion_medicamento, ca_clues.clave as clues, ca_clues.nombre as nombre_destino_final, ca_clues.direccion as direccion_destino_final, ca_entidades.descripcion as entidad_federativa_destino, ca_contratos.contrato as numero_contrato, ca_contratos.numero_procedimiento, ca_contratos.administrador_contrato as nombre_administrador, ca_proveedores.rfc, ca_proveedores.razon_social, ca_proveedores.domicilio as proveedor_domicilio, ca_dependencias.descripcion as institucion from owmedicamentos.orden_suministro inner join ca_medicamentos on ca_medicamentos.id = orden_suministro.id_medicamento inner join ca_clues on ca_clues.id = orden_suministro.id_clues inner join ca_entidades on ca_entidades.id = ca_clues.id_entidad inner join ca_contratos on ca_contratos.id = orden_suministro.id_contrato inner join ca_proveedores on ca_proveedores.id = orden_suministro.id_proveedor inner join ca_dependencias on ca_dependencias.id = orden_suministro.id_institucion_requirente where numero_orden_suministro = coalesce(%s,numero_orden_suministro) and id_contrato = coalesce(%s,id_contrato) and fecha_expedicion_orden between coalesce(%s, fecha_expedicion_orden) and coalesce(%s, fecha_expedicion_orden) and fecha_entrega_orden between coalesce(%s, fecha_entrega_orden) and coalesce(%s, fecha_entrega_orden) and orden_suministro.id_proveedor = coalesce(%s, orden_suministro.id_proveedor) and id_medicamento = coalesce(%s, id_medicamento) and id_almacen_entrega = coalesce(%s, id_almacen_entrega) and id_clues = coalesce(%s, id_clues) and id_institucion_requirente = coalesce(%s, id_institucion_requirente) and orden_suministro.estatus in (%s) AND orden_suministro.cantidad_solicitada = (select (sum(cantidad_recibida)) from orden_remision where orden_remision.id_orden_suministro = orden_suministro.id_orden_suministro) order by fecha_expedicion_orden desc LIMIT %s OFFSET %s;"
queries["ordenesSuministroPorFiltroRechazo"] = "SELECT count(*) as \"total_registros\", %s as \"registros_pagina\", CEIL(((count(*) :: numeric)/(%s :: numeric))) as \"total_paginas\" from owmedicamentos.orden_suministro where numero_orden_suministro = coalesce(%s,numero_orden_suministro) and id_contrato = coalesce(%s,id_contrato) and fecha_expedicion_orden between coalesce(%s, fecha_expedicion_orden) and coalesce(%s, fecha_expedicion_orden) and fecha_entrega_orden between coalesce(%s, fecha_entrega_orden) and coalesce(%s, fecha_entrega_orden) and orden_suministro.id_proveedor = coalesce(%s, orden_suministro.id_proveedor) and id_medicamento = coalesce(%s, id_medicamento) and id_almacen_entrega = coalesce(%s, id_almacen_entrega) and id_clues = coalesce(%s, id_clues) and id_institucion_requirente = coalesce(%s, id_institucion_requirente) and orden_suministro.estatus in (%s) AND orden_suministro.cantidad_solicitada <= (select (sum(cantidad_entregar)) from orden_remision where orden_remision.id_orden_suministro = orden_suministro.id_orden_suministro); SELECT orden_suministro.*, ca_medicamentos.clave, ca_medicamentos.descripcion as descripcion_medicamento, ca_clues.clave as clues, ca_clues.nombre as nombre_destino_final, ca_clues.direccion as direccion_destino_final, ca_entidades.descripcion as entidad_federativa_destino, ca_contratos.contrato as numero_contrato, ca_contratos.numero_procedimiento, ca_contratos.administrador_contrato as nombre_administrador, ca_proveedores.rfc, ca_proveedores.razon_social, ca_proveedores.domicilio as proveedor_domicilio, ca_dependencias.descripcion as institucion from owmedicamentos.orden_suministro inner join ca_medicamentos on ca_medicamentos.id = orden_suministro.id_medicamento inner join ca_clues on ca_clues.id = orden_suministro.id_clues inner join ca_entidades on ca_entidades.id = ca_clues.id_entidad inner join ca_contratos on ca_contratos.id = orden_suministro.id_contrato inner join ca_proveedores on ca_proveedores.id = orden_suministro.id_proveedor inner join ca_dependencias on ca_dependencias.id = orden_suministro.id_institucion_requirente where numero_orden_suministro = coalesce(%s,numero_orden_suministro) and id_contrato = coalesce(%s,id_contrato) and fecha_expedicion_orden between coalesce(%s, fecha_expedicion_orden) and coalesce(%s, fecha_expedicion_orden) and fecha_entrega_orden between coalesce(%s, fecha_entrega_orden) and coalesce(%s, fecha_entrega_orden) and orden_suministro.id_proveedor = coalesce(%s, orden_suministro.id_proveedor) and id_medicamento = coalesce(%s, id_medicamento) and id_almacen_entrega = coalesce(%s, id_almacen_entrega) and id_clues = coalesce(%s, id_clues) and id_institucion_requirente = coalesce(%s, id_institucion_requirente) and orden_suministro.estatus in ( %s ) AND orden_suministro.cantidad_solicitada <= (select (sum(cantidad_entregar)) from orden_remision where orden_remision.id_orden_suministro = orden_suministro.id_orden_suministro) order by fecha_expedicion_orden desc LIMIT %s OFFSET %s;"
queries["actualizarORParaCompletarTareaCamunda"] = "update owmedicamentos.orden_remision set estatus_operador_log = %s, inicio_recepcion_oper_log = %s, inicio_recepcion_usu_qr = %s, fecha_hora_recepcion = %s, usuario_registro_recepcion = %s, id_almacen_recibe = %s where numero_envio = %s;"
queries["obtenerUsuarioPorDependenciaYAlmacen"] = "select ca.id, ca.nombre, ca.primer_apellido, ca.usuario as email from (select * from ca_accesos where estatus = true) ca inner join rel_almacenes_administradores raa ON ca.id = raa.id_administrador inner join ca_dependencias cd ON cd.id = raa.id_almacen where raa.id_almacen = %s;"
queries["documentosPorNumeroEnvio"] = "Select *,(SELECT ca_tipo_documento.descripcion FROM ca_tipo_documento WHERE ca_tipo_documento.id = documentos_sndm.tipo) as \"documento\" from documentos_sndm where numero_envio = %s and is_deleted = false;"
queries["obtenerRemisionesParaNumEnvCompletados"] = "select distinct or2.numero_envio, (select count(*) from orden_remision or3 where or3.numero_envio = or2.numero_envio) as total_remisiones_envio, (select count(*) from orden_remision or4 where or4.numero_envio = or2.numero_envio and or4.id_usr_qr is not null and or4.inicio_recepcion_usu_qr = 1 and or4.estatus <> 1) as remisiones_completas from orden_remision or2 where or2.numero_orden_remision = %s;"
queries["consultaCanceladasxId"] = "select os.id_orden_suministro, numero_orden_suministro,cantidad_solicitada,ct.contrato ,cp.rfc,ca.codigo , cc.clave as clues,cm.clave as clavemed, fecha_cancelacion from orden_suministro os join ca_contratos ct on os.id_contrato = ct.id join ca_proveedores cp on os.id_proveedor = cp.id join ca_almacenes ca on os.id_almacen_entrega = ca.id join ca_clues cc on os.id_clues = cc.id join ca_medicamentos cm on os.id_medicamento = cm.id where os.id_orden_suministro = ANY(%s) and os.estatus = 9  ;"
queries["consultaCanceladasActualizar"] = "select cantidad_solicitada,id_orden_suministro from orden_suministro where estatus = 1 and TRUE is true and numero_orden_suministro IN (Select distinct numero_orden_suministro from orden_suministro where id_orden_suministro = ANY(%s)) and id_institucion_requirente = %s ;"
queries["consultaCantidadDisponible"] = "select os.id_orden_suministro ,os.id_medicamento ,os.cantidad_solicitada ,os.id_contrato ,rcm.id_medicamento ,rcm.cantidad_disponible ,rcm.cantidad_max ,rcm.cantidad_min from orden_suministro os join rel_contrato_medicamentos rcm ON rcm.id_contrato = os.id_contrato  and rcm.id_medicamento = os.id_medicamento where os.id_orden_suministro = %s ;"
queries["proveedorOrdenesByDepStatus"] = "select cp.id as \"proveedorId\",cp.razon_social as \"proveedor\" from orden_suministro os, ca_proveedores cp where os.id_proveedor = cp.id and os.estatus = any (%s) and os.id_institucion_requirente = %s  group by cp.id,cp.razon_social order by cp.razon_social asc;"
queries["almacenOrdenesByStatusProv"] = "select caa.id as \"almacenId\", caa.descripcion as \"almacen\" from orden_suministro os, ca_almacenes caa where os.id_almacen_entrega = caa.id and os.estatus = any (%s) and os.id_proveedor = %s group by caa.id, caa.descripcion  order by caa.descripcion asc ;"
-- HU58-AIJR inicio
queries["cantidadPendiente"] = "SELECT cantidad_solicitada - coalesce( (select sum(case when estatus_operador_log  IN (1,3) then cantidad_entregar when estatus_operador_log  IN (2) then cantidad_recibida else 0 end)  from orden_remision where orden_remision.id_orden_suministro = orden_suministro.id_orden_suministro) ,0) as cantidad_pendiente_orden from  orden_suministro inner join ca_medicamentos on ca_medicamentos.id = orden_suministro.id_medicamento inner join ca_clues on ca_clues.id = orden_suministro.id_clues inner join ca_entidades on ca_entidades.id = ca_clues.id_entidad inner join ca_contratos on ca_contratos.id = orden_suministro.id_contrato  where orden_suministro.id_orden_suministro = %s ;"
queries["estatusOrdenSuministro"] = "select estatus from orden_suministro where id_orden_suministro=%s;"
queries["actualizarRemision"] ="update orden_remision set cantidad_entregar=%s, codigo_barras=%s, codigo_barras_colectivo=%s, codigo_barras_general=%s, dimensiones_envase_colectivo_alto=%s, dimensiones_envase_colectivo_ancho=%s, dimensiones_envase_colectivo_profundidad=%s, fecha_caducidad=%s, fecha_fabricacion=%s, lote=%s, marca_medicamento=%s, peso_envase_colectivo=%s, procedencia=%s, piezas_envase_colectivo=%s, usuario_edicion=%s , causa_edicion=%s, fecha_edicion=current_timestamp where id_orden_remision= %s;"
queries["actualizacionEstatusOSprogramada"] =" update orden_suministro set estatus=3 where id_orden_suministro= %s;"
queries["actualizacionEstatusOSautorizada"] =" update orden_suministro set estatus=2 where id_orden_suministro= %s;"
queries["secuenciaTareaGlobal"] = "select max(idTareaAgrupaOS)+1 as secuenciaTarea from tareaTMP;"
queries["insertTareaTMP"] =" insert into tareaTMP values (default,%s,%s);"
queries["tareaAgrupada"] = "select idTareaAgrupaOS from tareaTMP where idOS=%s LIMIT 1 ;"
queries["tareaPorIds"] = "select idOS from tareaTMP where  idTareaAgrupaOS= %s;"
queries["cantidadTareaTotal"] = "SELECT  cantidad_solicitada - coalesce(( select sum(case when estatus_operador_log  IN (1,3)  then cantidad_entregar when estatus_operador_log  IN (2) then cantidad_recibida else 0 end) from orden_remision where orden_remision.id_orden_suministro = orden_suministro.id_orden_suministro) ,0) as cantidad_pendiente_total_tarea from  orden_suministro inner join ca_medicamentos on ca_medicamentos.id = orden_suministro.id_medicamento inner join ca_clues on ca_clues.id = orden_suministro.id_clues inner join ca_entidades on ca_entidades.id = ca_clues.id_entidad inner join ca_contratos on ca_contratos.id = orden_suministro.id_contrato  where orden_suministro.id_orden_suministro= %s;"
queries["cerrarTareaBandejaOrdenRemision"] = "UPDATE owmedicamentos.orden_suministro set estatus = 3, usuario_autorizacion = NULL where id_orden_suministro = %s;"
-- HU58-AIJR fin
queries["obtenerMotivosEdicion"] = " select  * from ca_causas_edicion ;"
queries["obtenerProveedores"] = "select id, razon_social  from ca_proveedores  where estatus=true order by razon_social asc;"



--Catálogos
queries["dependencias"] = "Select id, acronimo, descripcion, rfc from ca_dependencias where estatus is true; "
queries["almacenes"] = "Select id,codigo,descripcion,encargado_almacen,direccion from ca_almacenes where estatus is true; "
queries["proveedores"] = "select id, rfc, razon_social, representante_legal, domicilio, telefono_contacto, extension_contacto, correo_contacto, correo_facturacion from ca_proveedores where estatus is true; "
queries["proveedoresxInstitucion"] = "select distinct cp.id, cp.rfc, cp.razon_social, cp.representante_legal, cp.domicilio, cp.telefono_contacto, cp.extension_contacto, cp.correo_contacto, cp.correo_facturacion, cp.estatus from ca_proveedores cp  join ca_contratos cc on cc.id_proveedor = cp.id where cc.id_dependencia = %s; "
queries["medicamentos"] = "select id, clave, descripcion, sustancia_activa, presentacion_clave, grupo, clave_10posiciones, clave_14posiciones, insumo, tipo_insumo, tipo_presentacion from ca_medicamentos where estatus is true; "
queries["clues"] = "select ca_clues.id, clave, id_entidad, clave_municipio, clave_localidad, clave_jurisdiccion, id_dependencia, nombre, direccion, ca_entidades.descripcion as entidad from ca_clues inner join ca_entidades on ca_clues.id_entidad = ca_entidades.id where ca_clues.estatus is true; "
queries["cluesPorInstitucion"] = "select ca_clues.id, clave, id_entidad, clave_municipio, clave_localidad, clave_jurisdiccion, id_dependencia, nombre, direccion, ca_entidades.descripcion as entidad from ca_clues inner join ca_entidades on ca_clues.id_entidad = ca_entidades.id where id_dependencia = %s and ca_clues.estatus is true; "
queries["contratosPorInstitucion1"] = "select id, id_proveedor, contrato, fecha_ini, fecha_fin, administrador_contrato, numero_procedimiento, partida_presupuestal, numero_fianza from ca_contratos where id_dependencia = %s; "
queries["contratosPorInstitucion"] = "select cc.id, cc.id_proveedor, cc.contrato, cc.fecha_ini, cc.fecha_fin, cc.administrador_contrato, cc.numero_procedimiento, cc.partida_presupuestal, cc.numero_fianza,  cd.estatus as estatusdependencia, cc.estatus as estatuscontrato, cp.estatus as estatusproveeedor from ca_contratos cc join ca_dependencias cd on cd.id = cc.id_dependencia join ca_proveedores cp  on cp.id = cc.id_proveedor where cc.id_dependencia = %s and cc.estatus = true and  cc.fecha_fin >= current_date ; "
queries["medicamentosPorContrato1"] = "select ca_medicamentos.id, clave, descripcion, sustancia_activa, presentacion_clave, grupo, clave_10posiciones, clave_14posiciones, insumo, tipo_insumo, tipo_presentacion, rel_contrato_medicamentos.cantidad_max, rel_contrato_medicamentos.cantidad_min, rel_contrato_medicamentos.precio, rel_contrato_medicamentos.partida_evento_contratacion from ca_medicamentos inner join rel_contrato_medicamentos on rel_contrato_medicamentos.id_medicamento = ca_medicamentos.id where estatus is true and rel_contrato_medicamentos.id_contrato = %s; "
queries["medicamentosPorContrato"] = "select ca_medicamentos.id, clave, descripcion, sustancia_activa, presentacion_clave, grupo, clave_10posiciones, clave_14posiciones, insumo, tipo_insumo, tipo_presentacion, rel_contrato_medicamentos.cantidad_max, rel_contrato_medicamentos.cantidad_min, rel_contrato_medicamentos.precio, rel_contrato_medicamentos.partida_evento_contratacion,cc.estatus ,cc.fecha_fin, rel_contrato_medicamentos.cantidad_disponible, ca_medicamentos.estatus as estatusmed  from ca_medicamentos inner join rel_contrato_medicamentos on rel_contrato_medicamentos.id_medicamento = ca_medicamentos.id join ca_contratos cc on cc.id=rel_contrato_medicamentos.id_contrato where  rel_contrato_medicamentos.id_contrato = %s; "
queries["causasRechazo"] = "Select id,descripcion from ca_causas_rechazos where estatus is true;"
queries["dependenciasxId"] = "select id,rfc,estatus  from ca_dependencias cd where  id = %s and estatus = true ;"
queries["caTiposDocumento"] = "Select id,descripcion from ca_tipo_documento where estatus is true;"
-- HU58-AIJR
queries["causasEdicion"] = "Select id,descripcion from ca_causas_edicion where estatus is true;"
queries["caMotivosCancelacion"] = "select id,descripcion from ca_motivos_cancelacion where estatus = true;"

-- Consultas con formato
-- TODO: Add more parameter cantidad recibida bigint and date se puede utilizar caracter [[]] para concatenar pero en el log pinta los tab y ver separar en diferentes archivos
-- queries["enviosPorFiltros"] = "select count(*) as \"total_registros\", 99999 as \"registros_pagina\", ceil(((count(*) :: numeric)/(99999 :: numeric))) as \"total_paginas\" from owmedicamentos.orden_remision or2 join owmedicamentos.orden_suministro os on os.id_orden_suministro = or2.id_orden_suministro join owmedicamentos.ca_medicamentos cm on cm.id = os.id_medicamento join owmedicamentos.ca_proveedores cp on cp.id = os.id_proveedor where or2.id_almacen_recibe=%s and case when %s is null then 1 = 1 else cp.id = %s end; select cm.clave, or2.* from owmedicamentos.orden_remision or2 join owmedicamentos.orden_suministro os on os.id_orden_suministro = or2.id_orden_suministro join owmedicamentos.ca_medicamentos cm on cm.id = os.id_medicamento join owmedicamentos.ca_proveedores cp on cp.id = os.id_proveedor where or2.id_almacen_recibe=%s and case when %s is null then 1 = 1 else cp.id = %s end order by fecha_hora_recepcion desc LIMIT %s OFFSET %s;"
queries["enviosPorFiltros"] = "select count(*) as \"total_registros\", 99999 as \"registros_pagina\", ceil(((count(*) :: numeric)/(99999 :: numeric))) as \"total_paginas\" "..
		"from owmedicamentos.orden_remision or2 "..
		"join owmedicamentos.orden_suministro os on os.id_orden_suministro = or2.id_orden_suministro "..
		"join owmedicamentos.ca_medicamentos cm on cm.id = os.id_medicamento "..
		"join owmedicamentos.ca_proveedores cp on cp.id = os.id_proveedor "..
		"where or2.id_almacen_recibe=%s and case when %s is null then 1 = 1 else cp.id = %s end "..
		"AND or2.numero_envio like coalesce( %s , or2.numero_envio) "..
		"AND or2.numero_orden_remision  like coalesce(%s, or2.numero_orden_remision) "..
		"AND cm.clave  like coalesce(%s, cm.clave) "..
		"AND or2.cantidad_recibida = coalesce(%s, or2.cantidad_recibida) "..
		"AND or2.fecha_hora_recepcion::timestamp::date = coalesce(%s::timestamp::date, or2.fecha_hora_recepcion::timestamp::date); "..
		"select cm.clave, or2.* "..
		"from owmedicamentos.orden_remision or2 "..
		"join owmedicamentos.orden_suministro os on os.id_orden_suministro = or2.id_orden_suministro "..
		"join owmedicamentos.ca_medicamentos cm on cm.id = os.id_medicamento "..
		"join owmedicamentos.ca_proveedores cp on cp.id = os.id_proveedor "..
		"where or2.id_almacen_recibe=%s and case when %s is null then 1 = 1 else cp.id = %s end "..
		"AND or2.numero_envio like coalesce( %s, or2.numero_envio) "..
		"AND or2.numero_orden_remision  like coalesce(%s, or2.numero_orden_remision) "..
		"AND cm.clave  like coalesce(%s, cm.clave) "..
		"AND or2.cantidad_recibida = coalesce(%s, or2.cantidad_recibida) "..
		"AND or2.fecha_hora_recepcion::timestamp::date = coalesce(%s::timestamp::date, or2.fecha_hora_recepcion::timestamp::date) "..
		"order by fecha_hora_recepcion desc LIMIT %s OFFSET %s;"
queries["proveedorConOrdenes"] = "select cp.id as \"proveedorId\", cp.razon_social as \"proveedor\", "..
		" (select array_to_json(array_agg(row_to_json(t))) as almacenes"..
		" from (select caa.id as \"almacenId\", caa.descripcion as \"almacen\""..
		" from ca_almacenes caa"..
		" inner join orden_suministro os on os.id_almacen_entrega = caa.id"..
		" inner join orden_remision ore on os.id_orden_suministro = ore.id_orden_suministro"..
		" inner join ca_proveedores cp on cp.id = os.id_proveedor"..
		" inner join rel_usuarios_camunda ruc"..
		" on ruc.tipo = 'proveedores' and os.estatus in (4,5) and ruc.id = cp.id and"..
		" ruc.estatus is true"..
		" where ruc.usuario = ANY (%s)"..
		" group by caa.id, caa.descripcion order by caa.descripcion asc ) as t)"..
		" from ca_proveedores cp, rel_usuarios_camunda ruc"..
		" where cp.id = ruc.id"..
		" and ruc.estatus is true"..
		" and ruc.tipo = 'proveedores'"..
		" and ruc.usuario = ANY (%s);"
--queries["ordenesRemisionPorEnvioJSON"] = "with t as (select orden_suministro.*, orden_remision.*, ca_medicamentos.clave as clave_medicamento, ca_medicamentos.descripcion as descripcion_medicamento, ca_dependencias.descripcion as institucion, ca_clues.clave as clues, ca_clues.nombre as nombre_clues, ca_clues.direccion as clues_direccion, ca_proveedores.rfc, ca_proveedores.razon_social, ca_proveedores.domicilio as proveedor_domicilio, ca_almacenes.descripcion as almacen, ca_almacenes.direccion as almacen_direccion, ca_entidades.descripcion as entidad, ca_contratos.* from orden_suministro inner join orden_remision on orden_remision.id_orden_suministro = orden_suministro.id_orden_suministro inner join ca_dependencias on ca_dependencias.id = id_institucion_requirente inner join ca_clues on ca_clues.id = id_clues inner join ca_proveedores on ca_proveedores.id = orden_suministro.id_proveedor inner join ca_almacenes on ca_almacenes.id = orden_suministro.id_almacen_entrega inner join ca_entidades on ca_entidades.id = ca_clues.id_entidad inner join ca_contratos on ca_contratos.id = orden_suministro.id_contrato inner join ca_medicamentos on ca_medicamentos.id = id_medicamento where numero_envio = %s and orden_suministro.estatus <> 9) select institucion as \"institucionRequirente\", clues || ' - ' || nombre_clues as \"clues\", numero_orden_suministro as \"numeroOrdenSuministro\", numero_orden_remision as \"numeroOrdenRemision\", rfc as \"proveedorRfc\", razon_social as \"proveedorRazonSocial\", proveedor_domicilio as \"proveedorDomicilio\", to_char(fecha_expedicion_orden,'dd/MM/yyyy') as \"fechaExpedicionOrden\", to_char(fecha_hora_entrega,'dd/MM/yyyy HH24:MI') as \"fechaEntregaOrden\", almacen as \"almacenEntrega\", almacen_direccion as \"almacenDireccion\", clues_direccion as \"destinoFinalDireccion\", entidad as \"destinoFinalEntidad\", contrato, numero_procedimiento as \"procedimiento\", numero_fianza as \"fianza\", partida_presupuestal as \"partidaPresupuestal\", tarimas_totales as \"totalTarimas\", numero_envio as \"numeroEnvio\", (select array_to_json(array_agg(row_to_json(m))) from (select clave_medicamento as clave, descripcion_medicamento as descripcion, (select sum(cantidad_solicitada) from orden_suministro osm where osm.estatus <> 9 and osm.numero_orden_suministro = t2.numero_orden_suministro and osm.id_medicamento = t2.id_medicamento and osm.id_clues = t2.id_clues group by t2.numero_orden_suministro, t2.id_medicamento) as \"cantidadSolicitada\", sum(cantidad_entregar) as \"cantidadEntregar\", (select array_to_json(array_agg(row_to_json(d))) from (select lote, fecha_caducidad as \"fechaCaducidad\", fecha_fabricacion as \"fechaFabricacion\", peso_envase_colectivo as \"envaseColectivoPeso\", dimensiones_envase_colectivo_alto as \"envaseColectivoDimensionesAlto\", dimensiones_envase_colectivo_ancho as \"envaseColectivoDimensionesAncho\", dimensiones_envase_colectivo_profundidad as \"envaseColectivoDimensionesProfundidad\", piezas_envase_colectivo as \"envaseColectivoNumero\", CAST((CAST(sum(cantidad_entregar) AS DOUBLE PRECISION) / CAST(piezas_envase_colectivo AS DOUBLE PRECISION)) AS DOUBLE PRECISION) as \"envaseColectivoCantidad\", codigo_barras as \"codigoBarras\", marca_medicamento as \"medicamentoMarca\", procedencia, sum(cantidad_entregar) as \"cantidadEntregar\" from t as t3 where t1.numero_orden_suministro = t3.numero_orden_suministro and t1.numero_orden_remision = t3.numero_orden_remision and t2.id_medicamento = t3.id_medicamento group by lote,fecha_caducidad,fecha_fabricacion,peso_envase_colectivo,dimensiones_envase_colectivo_alto,dimensiones_envase_colectivo_ancho,dimensiones_envase_colectivo_profundidad,piezas_envase_colectivo,codigo_barras,marca_medicamento,procedencia order by lote) d) as detalles from t as t2 where t2.numero_orden_suministro = t1.numero_orden_suministro and t2.numero_orden_remision = t1.numero_orden_remision group by id_medicamento, clave_medicamento, descripcion_medicamento, numero_orden_suministro, id_clues order by clave_medicamento) m) as medicamentos from t as t1 group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19 order by numero_orden_suministro, numero_orden_remision;"
queries["ordenesRemisionPorEnvioJSON"] = "with t as (select orden_suministro.*, orden_remision.*, ca_medicamentos.clave as clave_medicamento, ca_medicamentos.descripcion as descripcion_medicamento,"..
		"ca_dependencias.descripcion as institucion, ca_clues.clave as clues, ca_clues.nombre as nombre_clues, ca_clues.direccion as clues_direccion, ca_proveedores.rfc, ca_proveedores.razon_social,"..
		"ca_proveedores.domicilio as proveedor_domicilio, ca_almacenes.descripcion as almacen, ca_almacenes.direccion as almacen_direccion, ca_entidades.descripcion as entidad, ca_contratos.*"..
		" from orden_suministro "..
		"inner join orden_remision on orden_remision.id_orden_suministro = orden_suministro.id_orden_suministro "..
		"inner join ca_dependencias on ca_dependencias.id = id_institucion_requirente "..
		"inner join ca_clues on ca_clues.id = id_clues inner join ca_proveedores on ca_proveedores.id = orden_suministro.id_proveedor "..
		"inner join ca_almacenes on ca_almacenes.id = orden_suministro.id_almacen_entrega "..
		"inner join ca_entidades on ca_entidades.id = ca_clues.id_entidad "..
		"inner join ca_contratos on ca_contratos.id = orden_suministro.id_contrato "..
		"inner join ca_medicamentos on ca_medicamentos.id = id_medicamento where numero_envio = %s and orden_suministro.estatus <> 9)"..
		" select institucion as \"institucionRequirente\", clues || ' - ' || nombre_clues as \"clues\", numero_orden_suministro as \"numeroOrdenSuministro\", numero_orden_remision as \"numeroOrdenRemision\", "..
		"rfc as \"proveedorRfc\", razon_social as \"proveedorRazonSocial\", proveedor_domicilio as \"proveedorDomicilio\", to_char(fecha_expedicion_orden,'dd/MM/yyyy') as \"fechaExpedicionOrden\", "..
		"to_char(fecha_hora_entrega,'dd/MM/yyyy HH24:MI') as \"fechaEntregaOrden\", almacen as \"almacenEntrega\", almacen_direccion as \"almacenDireccion\", clues_direccion as \"destinoFinalDireccion\", "..
		"entidad as \"destinoFinalEntidad\", contrato, numero_procedimiento as \"procedimiento\", numero_fianza as \"fianza\", partida_presupuestal as \"partidaPresupuestal\", "..
		"tarimas_totales as \"totalTarimas\", numero_envio as \"numeroEnvio\", "..
		"(select array_to_json(array_agg(row_to_json(m))) "..
		"from (select clave_medicamento as clave, descripcion_medicamento as descripcion, "..
		" (select sum(cantidad_solicitada) from orden_suministro osm where osm.estatus <> 9 and osm.numero_orden_suministro = t2.numero_orden_suministro and osm.id_medicamento = t2.id_medicamento and osm.id_clues = t2.id_clues group by t2.numero_orden_suministro, t2.id_medicamento) as \"cantidadSolicitada\", "..
		" sum(cantidad_entregar) as \"cantidadEntregar\", "..
		" (select rcm.precio from orden_suministro osm join rel_contrato_medicamentos rcm on rcm.id_medicamento = osm.id_medicamento  and rcm.id_contrato = osm.id_contrato where osm.estatus <> 9 and osm.numero_orden_suministro = t2.numero_orden_suministro and osm.id_medicamento = t2.id_medicamento and osm.id_clues = t2.id_clues group by t2.numero_orden_suministro, t2.id_medicamento,precio) as  \"precio\" ,       "..
		" (select array_to_json(array_agg(row_to_json(d))) "..
		" from (select lote, fecha_caducidad as \"fechaCaducidad\", fecha_fabricacion as \"fechaFabricacion\", peso_envase_colectivo as \"envaseColectivoPeso\", "..
		" dimensiones_envase_colectivo_alto as \"envaseColectivoDimensionesAlto\", dimensiones_envase_colectivo_ancho as \"envaseColectivoDimensionesAncho\", "..
		" dimensiones_envase_colectivo_profundidad as \"envaseColectivoDimensionesProfundidad\", piezas_envase_colectivo as \"envaseColectivoNumero\", "..
		" CAST((CAST(sum(cantidad_entregar) AS DOUBLE PRECISION) / CAST(piezas_envase_colectivo AS DOUBLE PRECISION)) AS DOUBLE PRECISION) as \"envaseColectivoCantidad\", "..
		" codigo_barras as \"codigoBarras\",codigo_barras_colectivo as \"codigoBarrasColectivo\",codigo_barras_general as \"codigoBarrasGeneral\","..
		" marca_medicamento as \"medicamentoMarca\", procedencia, sum(cantidad_entregar) as \"cantidadEntregar\" "..
		" from t as t3 where t1.numero_orden_suministro = t3.numero_orden_suministro and t1.numero_orden_remision = t3.numero_orden_remision and t2.id_medicamento = t3.id_medicamento "..
		" group by lote,fecha_caducidad,fecha_fabricacion,peso_envase_colectivo,dimensiones_envase_colectivo_alto,dimensiones_envase_colectivo_ancho,dimensiones_envase_colectivo_profundidad,"..
		" piezas_envase_colectivo,codigo_barras,marca_medicamento,procedencia,codigo_barras_colectivo,codigo_barras_general order by lote) d) as detalles "..
		" from t as t2 where t2.numero_orden_suministro = t1.numero_orden_suministro and t2.numero_orden_remision = t1.numero_orden_remision "..
		" group by id_medicamento, clave_medicamento, descripcion_medicamento, numero_orden_suministro, id_clues order by clave_medicamento) m) as medicamentos "..
		"from t as t1 group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19 order by numero_orden_suministro, numero_orden_remision;"
--queries["entradaAlmacenPorEnvioJSON"] = "with t as (select orden_suministro.*, orden_remision.*, ca_medicamentos.clave as clave_medicamento, ca_medicamentos.descripcion as descripcion_medicamento, ca_dependencias.descripcion as institucion, ca_clues.clave as clues, ca_clues.nombre as nombre_clues, ca_clues.direccion as clues_direccion, ca_proveedores.rfc, ca_proveedores.razon_social, ca_proveedores.domicilio as proveedor_domicilio, ca_almacenes.descripcion as almacen, ca_almacenes.direccion as almacen_direccion, ca_entidades.descripcion as entidad, ca_contratos.* from orden_suministro inner join orden_remision on orden_remision.id_orden_suministro = orden_suministro.id_orden_suministro inner join ca_dependencias on ca_dependencias.id = id_institucion_requirente inner join ca_clues on ca_clues.id = id_clues inner join ca_proveedores on ca_proveedores.id = orden_suministro.id_proveedor inner join ca_almacenes on ca_almacenes.id = orden_suministro.id_almacen_entrega inner join ca_entidades on ca_entidades.id = ca_clues.id_entidad inner join ca_contratos on ca_contratos.id = orden_suministro.id_contrato inner join ca_medicamentos on ca_medicamentos.id = id_medicamento where numero_envio = %s and orden_suministro.estatus <> 9) select institucion as \"institucionRequirente\", clues || ' - ' || nombre_clues as \"clues\", numero_orden_suministro as \"numeroOrdenSuministro\", numero_orden_remision as \"numeroOrdenRemision\", numero_orden_remision || '-E' as \"numeroEntrega\", rfc as \"proveedorRfc\", razon_social as \"proveedorRazonSocial\", proveedor_domicilio as \"proveedorDomicilio\", to_char(fecha_expedicion_orden,'dd/MM/yyyy') as \"fechaExpedicionOrden\", to_char(fecha_hora_entrega,'dd/MM/yyyy HH24:MI') as \"fechaProgramadaEntrega\", to_char(fecha_hora_recepcion,'dd/MM/yyyy HH24:MI') as \"fechaRealEntrega\", to_char(fecha_hora_entrega,'dd/MM/yyyy HH24:MI') as \"fechaEntregaOrden\", almacen as \"almacenEntrega\", almacen as \"almacenRecibe\", almacen_direccion as \"almacenDireccion\", clues_direccion as \"destinoFinalDireccion\", entidad as \"destinoFinalEntidad\", contrato, numero_procedimiento as \"procedimiento\", numero_fianza as \"fianza\", partida_presupuestal as \"partidaPresupuestal\", tarimas_totales as \"totalTarimas\", numero_envio as \"numeroEnvio\", (select array_to_json(array_agg(row_to_json(m))) from (select clave_medicamento as clave, descripcion_medicamento as descripcion, (select sum(cantidad_solicitada) from orden_suministro osm where osm.estatus <> 9 and osm.numero_orden_suministro = t2.numero_orden_suministro and osm.id_medicamento = t2.id_medicamento and osm.id_clues = t2.id_clues group by t2.numero_orden_suministro, t2.id_medicamento) as \"cantidadSolicitada\", sum(cantidad_entregar) as \"cantidadEntregar\", sum(cantidad_recibida) as \"cantidadRecibida\", (select array_to_json(array_agg(row_to_json(d))) from (select lote, fecha_caducidad as \"fechaCaducidad\", fecha_fabricacion as \"fechaFabricacion\", peso_envase_colectivo as \"envaseColectivoPeso\", dimensiones_envase_colectivo_alto as \"envaseColectivoDimensionesAlto\", dimensiones_envase_colectivo_ancho as \"envaseColectivoDimensionesAncho\", dimensiones_envase_colectivo_profundidad as \"envaseColectivoDimensionesProfundidad\", piezas_envase_colectivo as \"envaseColectivoNumero\", CAST((CAST(sum(cantidad_entregar) AS DOUBLE PRECISION) / CAST(piezas_envase_colectivo AS DOUBLE PRECISION)) AS DOUBLE PRECISION) as \"envaseColectivoCantidad\", codigo_barras as \"codigoBarras\", marca_medicamento as \"medicamentoMarca\", procedencia, sum(cantidad_entregar) as \"cantidadEntregar\", sum(cantidad_recibida) as \"cantidadRecibida\" from t as t3 where t1.numero_orden_suministro = t3.numero_orden_suministro and t1.numero_orden_remision = t3.numero_orden_remision and t2.id_medicamento = t3.id_medicamento group by lote,fecha_caducidad,fecha_fabricacion,peso_envase_colectivo,dimensiones_envase_colectivo_alto,dimensiones_envase_colectivo_ancho,dimensiones_envase_colectivo_profundidad,piezas_envase_colectivo,codigo_barras,marca_medicamento,procedencia order by lote) d) as detalles from t as t2 where t2.numero_orden_suministro = t1.numero_orden_suministro and t2.numero_orden_remision = t1.numero_orden_remision group by id_medicamento, clave_medicamento, descripcion_medicamento, numero_orden_suministro, id_clues order by clave_medicamento) m) as medicamentos from t as t1 group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23 order by numero_orden_suministro, numero_orden_remision;"
queries["entradaAlmacenPorEnvioJSON"] = "with t as (select orden_suministro.*, orden_remision.*, ca_medicamentos.clave as clave_medicamento, ca_medicamentos.descripcion as descripcion_medicamento, "..
		"ca_dependencias.descripcion as institucion, ca_clues.clave as clues, ca_clues.nombre as nombre_clues, ca_clues.direccion as clues_direccion, ca_proveedores.rfc, ca_proveedores.razon_social, "..
		"ca_proveedores.domicilio as proveedor_domicilio, ca_almacenes.descripcion as almacen, ca_almacenes.direccion as almacen_direccion, ca_entidades.descripcion as entidad, ca_contratos.* "..
		"from orden_suministro inner join orden_remision on orden_remision.id_orden_suministro = orden_suministro.id_orden_suministro "..
		"inner join ca_dependencias on ca_dependencias.id = id_institucion_requirente "..
		"inner join ca_clues on ca_clues.id = id_clues "..
		"inner join ca_proveedores on ca_proveedores.id = orden_suministro.id_proveedor "..
		"inner join ca_almacenes on ca_almacenes.id = orden_suministro.id_almacen_entrega "..
		"inner join ca_entidades on ca_entidades.id = ca_clues.id_entidad "..
		"inner join ca_contratos on ca_contratos.id = orden_suministro.id_contrato "..
		"inner join ca_medicamentos on ca_medicamentos.id = id_medicamento "..
		"where numero_envio = %s and orden_suministro.estatus <> 9) "..
		"select institucion as \"institucionRequirente\", clues || ' - ' || nombre_clues as \"clues\", numero_orden_suministro as \"numeroOrdenSuministro\", numero_orden_remision as \"numeroOrdenRemision\", "..
		"numero_orden_remision || '-E' as \"numeroEntrega\", rfc as \"proveedorRfc\", razon_social as \"proveedorRazonSocial\", proveedor_domicilio as \"proveedorDomicilio\", "..
		"to_char(fecha_expedicion_orden,'dd/MM/yyyy') as \"fechaExpedicionOrden\", to_char(fecha_hora_entrega,'dd/MM/yyyy HH24:MI') as \"fechaProgramadaEntrega\", "..
		"to_char(fecha_hora_recepcion,'dd/MM/yyyy HH24:MI') as \"fechaRealEntrega\", to_char(fecha_hora_entrega,'dd/MM/yyyy HH24:MI') as \"fechaEntregaOrden\", "..
		"almacen as \"almacenEntrega\", almacen as \"almacenRecibe\", almacen_direccion as \"almacenDireccion\", clues_direccion as \"destinoFinalDireccion\", entidad as \"destinoFinalEntidad\", "..
		"contrato, numero_procedimiento as \"procedimiento\", numero_fianza as \"fianza\", partida_presupuestal as \"partidaPresupuestal\", tarimas_totales as \"totalTarimas\", numero_envio as \"numeroEnvio\", "..
		"(select array_to_json(array_agg(row_to_json(m))) from (select clave_medicamento as clave, descripcion_medicamento as descripcion,"..
		" (select sum(cantidad_solicitada) from orden_suministro osm where osm.estatus <> 9 and osm.numero_orden_suministro = t2.numero_orden_suministro and osm.id_medicamento = t2.id_medicamento and osm.id_clues = t2.id_clues group by t2.numero_orden_suministro, t2.id_medicamento) as \"cantidadSolicitada\", "..
		" sum(cantidad_entregar) as \"cantidadEntregar\", sum(cantidad_recibida) as \"cantidadRecibida\", "..
		"(select array_to_json(array_agg(row_to_json(d))) from (select lote, fecha_caducidad as \"fechaCaducidad\", fecha_fabricacion as \"fechaFabricacion\", peso_envase_colectivo as \"envaseColectivoPeso\", "..
		" dimensiones_envase_colectivo_alto as \"envaseColectivoDimensionesAlto\", dimensiones_envase_colectivo_ancho as \"envaseColectivoDimensionesAncho\", "..
		" dimensiones_envase_colectivo_profundidad as \"envaseColectivoDimensionesProfundidad\", piezas_envase_colectivo as \"envaseColectivoNumero\", "..
		" CAST((CAST(sum(cantidad_entregar) AS DOUBLE PRECISION) / CAST(piezas_envase_colectivo AS DOUBLE PRECISION)) AS DOUBLE PRECISION) as \"envaseColectivoCantidad\", "..
		" codigo_barras as \"codigoBarras\",codigo_barras_colectivo as \"codigoBarrasColectivo\", codigo_barras_general as \"codigoBarrasGeneral\", "..
		" marca_medicamento as \"medicamentoMarca\", procedencia, sum(cantidad_entregar) as \"cantidadEntregar\", sum(cantidad_recibida) as \"cantidadRecibida\" "..
		" from t as t3 where t1.numero_orden_suministro = t3.numero_orden_suministro and t1.numero_orden_remision = t3.numero_orden_remision and t2.id_medicamento = t3.id_medicamento "..
		" group by lote,fecha_caducidad,fecha_fabricacion,peso_envase_colectivo,dimensiones_envase_colectivo_alto,dimensiones_envase_colectivo_ancho,dimensiones_envase_colectivo_profundidad,"..
		" piezas_envase_colectivo,codigo_barras,codigo_barras_colectivo,codigo_barras_general,marca_medicamento,procedencia order by lote) d) as detalles "..
		"from t as t2 where t2.numero_orden_suministro = t1.numero_orden_suministro and t2.numero_orden_remision = t1.numero_orden_remision "..
		"group by id_medicamento, clave_medicamento, descripcion_medicamento, numero_orden_suministro, id_clues order by clave_medicamento) m) as medicamentos "..
		"from t as t1 group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23 order by numero_orden_suministro, numero_orden_remision;"
queries["ordenesSuministroPorIdsCancelar"] = "SELECT orden_suministro.*,"..
       "ca_medicamentos.clave               as clave_medicamento,"..
       "ca_medicamentos.descripcion         as descripcion_medicamento,"..
       "ca_clues.clave                      as clues,"..
       "ca_clues.nombre                     as nombre_destino_final,"..
       "ca_clues.direccion                  as direccion_destino_final,"..
       "ca_entidades.descripcion            as entidad_federativa_destino,"..
       "ca_contratos.contrato               as numero_contrato,"..
       "ca_contratos.numero_procedimiento,"..
       "ca_contratos.administrador_contrato as nombre_administrador,"..
       "cantidad_solicitada - coalesce((select sum(case "..
                                                      " when estatus_operador_log IN (1, 3) then cantidad_entregar"..
                                                      " when estatus_operador_log IN (2) then cantidad_recibida"..
                                                      " else 0 end)"..
                                       " from orden_remision"..
                                       " where orden_remision.id_orden_suministro = orden_suministro.id_orden_suministro), 0)   as cantidad_pendiente_orden,"..
       "ca_proveedores.razon_social as proveedor,"..
       "ca_proveedores.rfc as rfc_proveedor, "..
       "ca_almacenes.codigo as almacen_codigo "..
	   "from owmedicamentos.orden_suministro"..
         " inner join ca_medicamentos on ca_medicamentos.id = orden_suministro.id_medicamento"..
         " inner join ca_clues on ca_clues.id = orden_suministro.id_clues"..
         " inner join ca_entidades on ca_entidades.id = ca_clues.id_entidad"..
         " inner join ca_contratos on ca_contratos.id = orden_suministro.id_contrato"..
		 " inner join ca_proveedores on ca_proveedores.id = orden_suministro.id_proveedor"..
		 " inner join ca_almacenes on ca_almacenes.id = orden_suministro.id_almacen_entrega"..
		 " where orden_suministro.id_orden_suministro = ANY(%s);"

local function escape(pg,params)
	--local inspect = require "inspect"
	--ngx.log(ngx.DEBUG,inspect(params))
	local escaped_params = {}
	for i,v in ipairs(params or {}) do
		if v == ngx.null then
			escaped_params[i] = "NULL"
		elseif type(v) == "table" and v[1] ~= nil then
			local encode_array = require("pgmoon.arrays").encode_array
			escaped_params[i] = encode_array(v)
		elseif type(v) == "table" then
			local encode_json = require("pgmoon.json").encode_json
			escaped_params[i] = encode_json(v)
		else
			-- ngx.log(ngx.DEBUG,(require "inspect")("=== escaped_params"))
			-- ngx.log(ngx.DEBUG,(require "inspect")(type(v)))
			-- ngx.log(ngx.DEBUG,(require "inspect")(v))

			-- Se agrega funcionalidad para permitir la entrada de etiquetas [[ ]] para cambiar salida
			if type(v) == "string" and string.sub(v,1,2) == "[[" and string.sub(v,-2) == "]]" then
				v = string.sub(v,3,-3)
				escaped_params[i] = v
			else
				escaped_params[i] = pg:escape_literal(v)
			end
		end
	end
	return escaped_params
end

function _AD.exec(query,srv,json)
	local ok, err, partial, num_queries, resDB, jsonResp, heIdEvent, heEvent, statusResp = false
	local heDetail = ""

	local pgmoon = require "pgmoon"
	local pg = pgmoon.new({host = DB_HOST, port = DB_PORT, database = DB_NAME, user = DB_USER, password = DB_PASS})

	local strQ = ""

	-- ngx.log(ngx.DEBUG,(require "inspect")("=== DATOS / SRV"))
	-- ngx.log(ngx.DEBUG,(require "inspect")(srv))
	 ngx.log(ngx.DEBUG,(require "inspect")(json))

	if #json > 0 then
		-- ngx.log(ngx.DEBUG,(require "inspect")("ggggggggggggggg"))
		-- ngx.log(ngx.DEBUG,(require "inspect")(queries[query]) )

		for _,reg in ipairs(json) do
			local data = {srv.getData(reg)}
			if data and next(data) then
				strQ = strQ..string.format(queries[query] or "", unpack(escape(pg,data)))
				ngx.log(ngx.DEBUG,(require "inspect")(strQ))
			end
		end
	else
		-- ngx.log(ngx.DEBUG,(require "inspect")("kkkkkkkkkkk"))
		 ngx.log(ngx.DEBUG,(require "inspect")(queries[query]) )

		local data = {srv.getData(json)}
		-- ngx.log(ngx.DEBUG,(require "inspect")("=== DATOS / DATA"))
		 ngx.log(ngx.DEBUG,(require "inspect")(data))
		 ngx.log(ngx.DEBUG,(require "inspect")(queries[query]))
	
		if data and next(data) then
			strQ=string.format(queries[query] or "", unpack(escape(pg,data)))
			ngx.log(ngx.DEBUG,(require "inspect")(strQ))
		end
	end

	ok, err = pg:connect()
	if ok then
		ngx.log(ngx.DEBUG,"=========== START QUERY ===========")
		ngx.log(ngx.DEBUG,strQ)
		ngx.log(ngx.DEBUG,"============ END QUERY ============")
		if strQ ~= "" then
			resDB, err, partial, num_queries = pg:query(strQ)
			if resDB then
				ok = true
			else
				ok = false
				local errType = 'DATABASE_ERROR'
				ngx.log(ngx.DEBUG,(require "inspect")(partial),num_queries)
				if err and tostring(err):match("unique") then
					errType = 'DATABASE_UNIQUE_ERROR'
				elseif  err and tostring(err):match("foreign") then
					errType = 'DATABASE_FOREIGN_ERROR'
				end

				jsonResp = {codigo=globals.messages[errType].code,mensaje=globals.messages[errType].message,error=err,registro=num_queries+1}
				heIdEvent = globals.messages[errType].idEvent
				heEvent = globals.messages[errType].event
				statusResp = 409
				heDetail = err
				local var1 = string.sub(heDetail,1,27)
				if var1 == "ERROR: null value in column" then
					local var2 = string.sub(heDetail,30,40)
					local var3 = string.sub(heDetail,30,41)
					local var4 = string.sub(heDetail,30,47)
					local var5 = string.sub(heDetail,30,37)
					local var6 = string.sub(heDetail,30,43)
					local var7 = string.sub(heDetail,30,48)
					if query == "ordenSuministroLayout" then 
						--ngx.log(ngx.DEBUG,(require "inspect")("======SI entra OK ===MODF======"))
						if var2 == "id_contrato" then
							statusResp = 411 
						end
						if var3 == "id_proveedor" then
							statusResp = 412 
						end
						if var4 == "id_almacen_entrega" then
							statusResp = 413 
						end
						if var5 == "id_clues" then
							statusResp = 414 
						end
						if var6 == "id_medicamento" then
							ngx.log(ngx.DEBUG,(require "inspect")("======entra Ultimo IF ===MODF======"))
							statusResp = 415 
						end	
						if var7 == "cantidad_solicitada" then
							statusResp = 416 
						end					
					end
				end
				ngx.log(ngx.WARN,err,strQ)
			end
		end
		pg:keepalive(0,MAX_IDLE)
	else
		ok = false
		jsonResp = {codigo=globals.messages.DATABASE_NOT_RESPONDING.code,mensaje=globals.messages.DATABASE_NOT_RESPONDING.message}
		heIdEvent = globals.messages.DATABASE_NOT_RESPONDING.idEvent
		heEvent = globals.messages.DATABASE_NOT_RESPONDING.event
		heDetail = err
		statusResp = 500
		ngx.log(ngx.WARN,err)
	end

	return ok, resDB, jsonResp, heIdEvent, heEvent, statusResp, heDetail
end

return _AD
