Forma
FACTARGMONPRESTAM - Monitor préstamos

Tablas
V_PRESTAMOS_DOCS
PRESTAMOS_DOCUMENTOS
DETALLE_PRESTAMOS_DOCS
DOCUMENTOS
EXPEDIENTES

CAT_DELEGACIONES
CAT_SUBDELEGACIONES
CAT_DEPARTAMENTOS
SEG_USUARIOS
SEG_ACCESO_X_AREAS
SEG_PANTALLAS_APLICACION

Procesos
PROCEDURE PUP_CONSULTA_DOCS_STATUS_EXP

Archivos

Reportes




SELECT exp.no_expediente, exp.averiguacion_previa, exp.causa_penal
FROM expedientes exp
WHERE EXISTS (SELECT 1
              FROM   documentos doc
              WHERE  exp.no_expediente   = doc.no_expediente
              AND    doc.estatus_archivo IN ('PRESTADO', 'ARCHIVADO'))
ORDER BY 1


SELECT USU.USUARIO,USU.NOMBRE,DPT.NO_DEPARTAMENTO,
       DPT.DESCRIPCION DEPARTAMENTO,SDL.NO_SUBDELEGACION,
       SDL.DESCRIPCION SUBDELEGACION,DEL.NO_DELEGACION,
       DEL.DESCRIPCION DELEGACION
FROM CAT_DELEGACIONES    DEL,
     CAT_SUBDELEGACIONES SDL,
     CAT_DEPARTAMENTOS   DPT,
     SEG_USUARIOS        USU,
     SEG_ACCESO_X_AREAS  SAA
WHERE SAA.ASIGNADO         = 'S'
AND   DPT.NO_DEPARTAMENTO  = SAA.NO_DEPARTAMENTO
AND   DPT.NO_DELEGACION    = SAA.NO_DELEGACION
AND   DPT.NO_SUBDELEGACION = SAA.NO_SUBDELEGACION
AND   SDL.NO_DELEGACION    = DPT.NO_DELEGACION
AND   SDL.NO_SUBDELEGACION = DPT.NO_SUBDELEGACION
AND   DEL.NO_DELEGACION    = SDL.NO_DELEGACION
AND   SAA.USUARIO          = USU.USUARIO
AND EXISTS (SELECT 1
            FROM prestamos_documentos doc,
                 detalle_prestamos_docs det
            WHERE doc.no_prestamo = det.no_prestamo
            AND   doc.usuario_prestamo = usu.usuario
            AND   det.no_expediente    =             nvl(:ti_no_expediente,det.no_expediente))
         ---AND   det.fec_devolucion_real IS NOT NULL)
		 
   ----------
   * Nombre                                          PUP_INICIALIZA_FORMA
   - Información de Subclase                         
   - Comentarios                                     
   * Texto de Unidad de Programa                     

/****************************************************************************/
/*Prosoft de México, S. A. De C. V.                                         */
/*Fecha de Creación: 09-07-2000                                             */
/*Autor:                                                                    */
/*Objetivo:Procedimiento que sustituye al trigger WHEN-NEW-FORM-INSTANCE    */
/*         ya que este se encuentra referenciado.                           */
/****************************************************************************/
PROCEDURE PUP_INICIALIZA_FORMA IS
BEGIN
  NULL;
END;
   * Tipo de Unidad de Programa                      Procedimiento
   ----------
   * Nombre                                          PUF_MENSAJE_SI_NO
   * Información de Subclase                         
     ----------
     * Ubicación                                     Archivo
     * Archivo de Origen                             sera_toolbar.fmb
     - Ruta de Acceso de Origen                      
     - Módulo de Origen                              
     - Propietario de Origen                         
     * Nivel de Origen                               
       ----------
       * Nombre de Origen                            SERA_TOOLBAR
       ----------
       * Nombre de Origen                            PUF_MENSAJE_SI_NO
       ----------
     ----------
   - Comentarios                                     
   ^ Texto de Unidad de Programa                     

/************************************************************************/
/*Prosoft de México, S. A. De C. V.                                     */
/*Fecha de Creación: 09-07-2000                                         */
/*Autor:                                                                */
/*Objetivo:Mostrar mensaje al momento de salir de la aplicación,        */
/*         para evitar que el usuario salga de la misma por error.      */
/************************************************************************/
  FUNCTION PUF_MENSAJE_SI_NO (pc_mensaje VARCHAR2) 
   RETURN CHAR IS
   vn_boton_seleccionado NUMBER;
BEGIN
   SET_ALERT_PROPERTY('ALR_MENSAJE_SI_NO',ALERT_MESSAGE_TEXT,pc_mensaje);
   vn_boton_seleccionado := SHOW_ALERT('ALR_MENSAJE_SI_NO');
   IF   vn_boton_seleccionado = ALERT_BUTTON1 THEN
      RETURN 'S';
   ELSE
      RETURN 'N';
   END IF;
END;

   o Tipo de Unidad de Programa                      Función
   ----------
   * Nombre                                          PUP_SALIR
   * Información de Subclase                         
     ----------
     * Ubicación                                     Archivo
     * Archivo de Origen                             sera_toolbar.fmb
     - Ruta de Acceso de Origen                      
     - Módulo de Origen                              
     - Propietario de Origen                         
     * Nivel de Origen                               
       ----------
       * Nombre de Origen                            SERA_TOOLBAR
       ----------
       * Nombre de Origen                            PUP_SALIR
       ----------
     ----------
   - Comentarios                                     
   ^ Texto de Unidad de Programa                     

/************************************************************************/
/*Prosoft de México, S. A. De C. V.                                     */
/*Fecha de Creación: 11-07-2000                                         */
/*Autor:                                                                */
/*Objetivo: Mostrar mensaje al momento de salir de la forma, para       */
/*          evitar que el usuario salga de la misma por error.          */
/************************************************************************/
PROCEDURE PUP_SALIR IS
   curform 				VARCHAR2(40);
   formname				VARCHAR2(40);
BEGIN
   curform := :System.Current_Form;
   formname := Get_Form_Property(curform,FORM_NAME);
   IF :SYSTEM.CURRENT_FORM = formname THEN
      IF PUF_MENSAJE_SI_NO('¿Desea Salir?') = 'S' THEN
         IF NAME_IN('SYSTEM.MODE')='ENTER-QUERY' THEN
            DO_KEY('EXIT_FORM');
         END IF;
         DO_KEY('EXIT_FORM');
      END IF;
   ELSE
      IF NAME_IN('SYSTEM.MODE')='ENTER-QUERY' THEN
         DO_KEY('EXIT_FORM');
      END IF;
      DO_KEY('EXIT_FORM');
   END IF;
END;
   o Tipo de Unidad de Programa                      Procedimiento
   ----------
   * Nombre                                          PUP_CONSULTA
   - Información de Subclase                         
   - Comentarios                                     
   * Texto de Unidad de Programa                     

PROCEDURE PUP_CONSULTA IS
BEGIN
  DECLARE
	v_where VARCHAR2(300);
  BEGIN 
  v_where := 'ESTATUS_ARCHIVO IN (''P'',''A'')';
	IF :blk_consulta.ti_usuario_presta IS NOT NULL THEN
		v_where := v_where ||' AND usuario = :blk_consulta.ti_usuario_presta';
	END IF;
	IF :blk_consulta.ti_no_expediente IS NOT NULL THEN
		v_where := v_where ||' AND no_expediente = :blk_consulta.ti_no_expediente';
	END IF;
/*	
	IF :blk_consulta.ti_no_entrada IS NOT NULL THEN
		v_where := v_where ||' AND no_entrada = :blk_consulta.ti_no_entrada';
	END IF;
*/		
--	SET_BLOCK_PROPERTY('BLK_V_PDD',DEFAULT_WHERE,v_where);
	GO_BLOCK('BLK_V_PDD');
	EXECUTE_QUERY(NO_VALIDATE);
END;
END;

   ----------
 * Grupos de Registros                               
 * Grupos de Registros                               
   ----------
   ----------
   * Nombre                                          RG_EXP
   * Nombre                                          RG_EXP
   - Información de Subclase                         
   - Información de Subclase                         
   - Comentarios                                     
   - Comentarios                                     
   * Tipo de Grupo de Registros                      Consulta
   * Tipo de Grupo de Registros                      Consulta
   * Consulta de Grupo de Registros                  SELECT exp.no_expediente, exp.averiguacion_previa, exp.causa_penal
   * Consulta de Grupo de Registros                  SELECT exp.no_expediente, exp.averiguacion_previa, exp.causa_penal
FROM expedientes exp
FROM expedientes exp
WHERE EXISTS (SELECT 1
WHERE EXISTS (SELECT 1
              FROM   documentos doc
              FROM   documentos doc
              WHERE  exp.no_expediente   = doc.no_expediente
              WHERE  exp.no_expediente   = doc.no_expediente
              AND    doc.estatus_archivo IN ('PRESTADO', 'ARCHIVADO'))
              AND    doc.estatus_archivo IN ('PRESTADO', 'ARCHIVADO'))
ORDER BY 1
ORDER BY 1


   ----------
   ----------
   * Nombre                                          RG_USU
   * Nombre                                          RG_USU
   - Información de Subclase                         
   - Información de Subclase                         
   - Comentarios                                     
   - Comentarios                                     
   * Tipo de Grupo de Registros                      Consulta
   * Tipo de Grupo de Registros                      Consulta
   * Consulta de Grupo de Registros                  SELECT USU.USUARIO,USU.NOMBRE,DPT.NO_DEPARTAMENTO,
   * Consulta de Grupo de Registros                  SELECT USU.USUARIO,USU.NOMBRE,DPT.NO_DEPARTAMENTO,
       DPT.DESCRIPCION DEPARTAMENTO,SDL.NO_SUBDELEGACION,
       DPT.DESCRIPCION DEPARTAMENTO,SDL.NO_SUBDELEGACION,
       SDL.DESCRIPCION SUBDELEGACION,DEL.NO_DELEGACION,
       SDL.DESCRIPCION SUBDELEGACION,DEL.NO_DELEGACION,
       DEL.DESCRIPCION DELEGACION
       DEL.DESCRIPCION DELEGACION
FROM CAT_DELEGACIONES    DEL,
FROM CAT_DELEGACIONES    DEL,
     CAT_SUBDELEGACIONES SDL,
     CAT_SUBDELEGACIONES SDL,
     CAT_DEPARTAMENTOS   DPT,
     CAT_DEPARTAMENTOS   DPT,
     SEG_USUARIOS        USU,
     SEG_USUARIOS        USU,
     SEG_ACCESO_X_AREAS  SAA
     SEG_ACCESO_X_AREAS  SAA
WHERE SAA.ASIGNADO         = 'S'
WHERE SAA.ASIGNADO         = 'S'
AND   DPT.NO_DEPARTAMENTO  = SAA.NO_DEPARTAMENTO
AND   DPT.NO_DEPARTAMENTO  = SAA.NO_DEPARTAMENTO
AND   DPT.NO_DELEGACION    = SAA.NO_DELEGACION
AND   DPT.NO_DELEGACION    = SAA.NO_DELEGACION
AND   DPT.NO_SUBDELEGACION = SAA.NO_SUBDELEGACION
AND   DPT.NO_SUBDELEGACION = SAA.NO_SUBDELEGACION
AND   SDL.NO_DELEGACION    = DPT.NO_DELEGACION
AND   SDL.NO_DELEGACION    = DPT.NO_DELEGACION
AND   SDL.NO_SUBDELEGACION = DPT.NO_SUBDELEGACION
AND   SDL.NO_SUBDELEGACION = DPT.NO_SUBDELEGACION
AND   DEL.NO_DELEGACION    = SDL.NO_DELEGACION
AND   DEL.NO_DELEGACION    = SDL.NO_DELEGACION
AND   SAA.USUARIO          = USU.USUARIO
AND   SAA.USUARIO          = USU.USUARIO
AND EXISTS (SELECT 1
AND EXISTS (SELECT 1
            FROM prestamos_documentos doc,
            FROM prestamos_documentos doc,
                 detalle_prestamos_docs det
                 detalle_prestamos_docs det
            WHERE doc.no_prestamo = det.no_prestamo
            WHERE doc.no_prestamo = det.no_prestamo
            AND   doc.usuario_prestamo = usu.usuario
            AND   doc.usuario_prestamo = usu.usuario
            AND   det.no_expediente    =             nvl(:ti_no_expediente,det.no_expediente))
            AND   det.no_expediente    =             nvl(:ti_no_expediente,det.no_expediente))
         ---AND   det.fec_devolucion_real IS NOT NULL)
         ---AND   det.fec_devolucion_real IS NOT NULL)


   ----------
   ----------
   * Nombre                                          LOV_TIPOS_DOC
   * Nombre                                          LOV_TIPOS_DOC
   - Información de Subclase                         
   - Información de Subclase                         
   - Comentarios                                     
   - Comentarios                                     
   * Tipo de Grupo de Registros                      Consulta
   * Tipo de Grupo de Registros                      Consulta
   * Consulta de Grupo de Registros                  SELECT distinct doc.no_expediente, doc.cve_tipo_documento,
   * Consulta de Grupo de Registros                  SELECT distinct doc.no_expediente, doc.cve_tipo_documento,
doc.fec_INGRESO_GUARDAVALOR, doc.descripcion_documento
doc.fec_INGRESO_GUARDAVALOR, doc.descripcion_documento
FROM  V_PRESTAMOS_DOCS doc
FROM  V_PRESTAMOS_DOCS doc
WHERE  doc.no_expediente = nvl(:ti_no_expediente,doc.no_expediente)
WHERE  doc.no_expediente = nvl(:ti_no_expediente,doc.no_expediente)
AND    DOC.USUARIO = nvl(:TI_USUARIO_PRESTA,DOC.USUARIO)
AND    DOC.USUARIO = nvl(:TI_USUARIO_PRESTA,DOC.USUARIO)
ORDER BY 1
ORDER BY 1


